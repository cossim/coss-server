syntax = "proto3";
package v1;
option go_package = "github.com/cossim/coss-server/internal/storage/api/v1";

message UploadRequest {
  // @inject_tag: json:"user_id"
  string UserID = 1;
  // @inject_tag: json:"file_name"
  string FileName = 2;
  // @inject_tag: json:"path"
  string Path = 3;
  // @inject_tag: json:"url"
  string Url = 4;
  // @inject_tag: json:provider"
  string Provider = 5;
  // @inject_tag: json:"type"
  FileType Type = 6;
  // @inject_tag: json:"size"
  uint64 Size = 7;
}

message UploadResponse {
  // @inject_tag: json:"url"
  string Url = 1;
}

// 文件类型的枚举
enum FileType {
  Voice = 0;    // 语音类型
  Image = 1;    // 图片类型
  File = 2;     // 文件类型
  Video = 3;    // 视频类型
  Other = 4;    // 其他类型
}

message GetFileInfoRequest {
  // @inject_tag: json:"file_id"
  string FileID = 1;
}

message GetFileInfoResponse {
  // @inject_tag: json:"file_id"
  string FileID = 1;
  // @inject_tag: json:"file_name"
  string FileName = 2;
  // @inject_tag: json:"url"
  string Url = 3;
  // @inject_tag: json:"size"
  uint64 Size = 4;
  // @inject_tag: json:"type"
  FileType Type = 5;
  // @inject_tag: json:"created_at"
  string CreatedAt = 6;
  // @inject_tag: json:"updated_at"
  string UpdatedAt = 7;
  // @inject_tag: json:"path"
  string Path = 8;
}

message DeleteRequest {
  // @inject_tag: json:"file_id"
  string FileID = 1;
}

message DeleteResponse {

}

service StorageService {
  rpc Upload(UploadRequest) returns (UploadResponse);
  rpc GetFileInfo(GetFileInfoRequest) returns (GetFileInfoResponse);
  rpc Delete(DeleteRequest) returns (DeleteResponse);
}
