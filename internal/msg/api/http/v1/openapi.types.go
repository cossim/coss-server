// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package v1

// Defines values for SendUserMsgRequestType.
const (
	N1  SendUserMsgRequestType = 1
	N10 SendUserMsgRequestType = 10
	N11 SendUserMsgRequestType = 11
	N12 SendUserMsgRequestType = 12
	N2  SendUserMsgRequestType = 2
	N3  SendUserMsgRequestType = 3
	N4  SendUserMsgRequestType = 4
	N5  SendUserMsgRequestType = 5
	N6  SendUserMsgRequestType = 6
	N7  SendUserMsgRequestType = 7
	N8  SendUserMsgRequestType = 8
	N9  SendUserMsgRequestType = 9
)

// AfterMsg defines model for AfterMsg.
type AfterMsg struct {
	DialogId int `json:"dialog_id"`
	MsgId    int `json:"msg_id"`
}

// EditGroupMsgRequest defines model for EditGroupMsgRequest.
type EditGroupMsgRequest struct {
	Content string `json:"content"`
	MsgType int    `json:"msg_type"`
}

// EditUserMsgRequest defines model for EditUserMsgRequest.
type EditUserMsgRequest struct {
	Content string `json:"content"`
	MsgType int    `json:"msg_type"`
}

// GetDialogAfterMsgResponse defines model for GetDialogAfterMsgResponse.
type GetDialogAfterMsgResponse struct {
	DialogId int        `json:"dialog_id"`
	Messages *[]Message `json:"messages,omitempty"`
	Total    int        `json:"total"`
}

// GetGroupLabelMsgListResponse defines model for GetGroupLabelMsgListResponse.
type GetGroupLabelMsgListResponse struct {
	List []Message `json:"list,omitempty"`
}

// GetGroupMessageReadersResponse defines model for GetGroupMessageReadersResponse.
type GetGroupMessageReadersResponse struct {
	Avatar string `json:"avatar"`
	Name   string `json:"name"`
	UserId string `json:"user_id"`
}

// GetGroupMsgListResponse defines model for GetGroupMsgListResponse.
type GetGroupMsgListResponse struct {
	CurrentPage   int             `json:"current_page"`
	GroupMessages *[]GroupMessage `json:"group_messages,omitempty"`
	Total         int             `json:"total"`
}

// GetUserDialogListResponse defines model for GetUserDialogListResponse.
type GetUserDialogListResponse struct {
	CurrentPage int                       `json:"current_page"`
	List        *[]UserDialogListResponse `json:"list"`
	Total       int                       `json:"total"`
}

// GetUserLabelMsgListResponse defines model for GetUserLabelMsgListResponse.
type GetUserLabelMsgListResponse struct {
	List []Message `json:"list,omitempty"`
}

// GetUserMsgListResponse defines model for GetUserMsgListResponse.
type GetUserMsgListResponse struct {
	CurrentPage  int            `json:"current_page"`
	Total        int            `json:"total"`
	UserMessages *[]UserMessage `json:"user_messages,omitempty"`
}

// GroupMessage defines model for GroupMessage.
type GroupMessage struct {
	AtAllUser              bool        `json:"at_all_user"`
	AtUsers                []string    `json:"at_users"`
	Content                string      `json:"content"`
	DialogId               int         `json:"dialog_id"`
	GroupId                int         `json:"group_id"`
	IsBurnAfterReadingType bool        `json:"is_burn_after_reading_type"`
	IsLabel                bool        `json:"is_label"`
	IsRead                 bool        `json:"is_read"`
	MsgId                  int         `json:"msg_id"`
	ReadAt                 int         `json:"read_at"`
	ReadCount              int         `json:"read_count"`
	ReplyId                int         `json:"reply_id"`
	SendAt                 int         `json:"send_at"`
	SenderInfo             *SenderInfo `json:"sender_info,omitempty"`
	Type                   int         `json:"type"`
	UserId                 string      `json:"user_id"`
}

// GroupMessageReadRequest defines model for GroupMessageReadRequest.
type GroupMessageReadRequest struct {
	DialogId int   `json:"dialog_id"`
	MsgIds   []int `json:"msg_ids"`
	ReadAll  bool  `json:"read_all"`
}

// LabelGroupMessageRequest defines model for LabelGroupMessageRequest.
type LabelGroupMessageRequest struct {
	IsLabel bool `json:"is_label"`
}

// LabelUserMessageRequest defines model for LabelUserMessageRequest.
type LabelUserMessageRequest struct {
	IsLabel bool `json:"is_label"`
}

// Message defines model for Message.
type Message struct {
	AtAllUser          bool        `json:"at_all_user"`
	AtUsers            []string    `json:"at_users"`
	Content            string      `json:"content"`
	DialogId           int         `json:"dialog_id"`
	GroupId            int         `json:"group_id"`
	IsBurnAfterReading bool        `json:"is_burn_after_reading"`
	IsLabel            bool        `json:"is_label"`
	IsRead             bool        `json:"is_read"`
	MsgId              int         `json:"msg_id"`
	MsgType            int         `json:"msg_type"`
	ReadAt             int         `json:"read_at"`
	ReceiverInfo       *SenderInfo `json:"receiver_info,omitempty"`
	ReplyId            int         `json:"reply_id"`
	SendAt             int         `json:"send_at"`
	SenderId           string      `json:"sender_id"`
	SenderInfo         *SenderInfo `json:"sender_info,omitempty"`
}

// ReadUserMsgsRequest defines model for ReadUserMsgsRequest.
type ReadUserMsgsRequest struct {
	DialogId int   `json:"dialog_id"`
	MsgIds   []int `json:"msg_ids"`
	ReadAll  bool  `json:"read_all"`
}

// Response defines model for Response.
type Response struct {
	Code int                     `json:"code"`
	Data *map[string]interface{} `json:"data,omitempty"`
	Msg  string                  `json:"msg"`
}

// SendGroupMsgRequest defines model for SendGroupMsgRequest.
type SendGroupMsgRequest struct {
	AtAllUser          bool     `json:"at_all_user"`
	AtUsers            []string `json:"at_users"`
	Content            string   `json:"content"`
	DialogId           int      `json:"dialog_id"`
	GroupId            int      `json:"group_id"`
	IsBurnAfterReading bool     `json:"is_burn_after_reading"`
	ReplyId            int      `json:"reply_id"`
	Type               int      `json:"type"`
}

// SendGroupMsgResponse defines model for SendGroupMsgResponse.
type SendGroupMsgResponse struct {
	MsgId    int      `json:"msg_id"`
	ReplyMsg *Message `json:"reply_msg"`
}

// SendUserMsgRequest defines model for SendUserMsgRequest.
type SendUserMsgRequest struct {
	Content            string `json:"content"`
	DialogId           int    `json:"dialog_id"`
	IsBurnAfterReading bool   `json:"is_burn_after_reading"`
	ReceiverId         string `json:"receiver_id"`
	ReplyId            int    `json:"reply_id"`

	// Type 消息类型 1=文本消息 2=语音消息 3=图片消息 4=标注 5=群公告 6=文件消息 7=视频消息 8=emoji回复 9=语音通话 10=视频通话 11=撤回消息 12=取消标注
	Type SendUserMsgRequestType `json:"type"`
}

// SendUserMsgRequestType 消息类型 1=文本消息 2=语音消息 3=图片消息 4=标注 5=群公告 6=文件消息 7=视频消息 8=emoji回复 9=语音通话 10=视频通话 11=撤回消息 12=取消标注
type SendUserMsgRequestType int

// SendUserMsgResponse defines model for SendUserMsgResponse.
type SendUserMsgResponse struct {
	MsgId    int      `json:"msg_id"`
	ReplyMsg *Message `json:"reply_msg"`
}

// SenderInfo defines model for SenderInfo.
type SenderInfo struct {
	Avatar string `json:"avatar"`
	Name   string `json:"name"`
	UserId string `json:"user_id"`
}

// UserDialogListResponse defines model for UserDialogListResponse.
type UserDialogListResponse struct {
	DialogAvatar      string   `json:"dialog_avatar"`
	DialogCreateAt    int      `json:"dialog_create_at"`
	DialogId          int      `json:"dialog_id"`
	DialogName        string   `json:"dialog_name"`
	DialogType        int      `json:"dialog_type"`
	DialogUnreadCount int      `json:"dialog_unread_count"`
	GroupId           int      `json:"group_id,omitempty"`
	IsSilent          bool     `json:"is_silent"`
	LastMessage       *Message `json:"last_message"`
	TopAt             int      `json:"top_at"`
	UserId            string   `json:"user_id,omitempty"`
}

// UserMessage defines model for UserMessage.
type UserMessage struct {
	BurnAfterReadingTimeout int         `json:"burn_after_reading_timeout"`
	Content                 string      `json:"content"`
	DialogId                int         `json:"dialog_id"`
	IsBurnAfterReadingType  bool        `json:"is_burn_after_reading_type"`
	IsLabel                 bool        `json:"is_label"`
	IsRead                  bool        `json:"is_read"`
	MsgId                   int         `json:"msg_id"`
	ReadAt                  int         `json:"read_at"`
	ReceiverId              string      `json:"receiver_id"`
	ReceiverInfo            *SenderInfo `json:"receiver_info,omitempty"`
	ReplyId                 int         `json:"reply_id"`
	SendAt                  int         `json:"send_at"`
	SenderId                string      `json:"sender_id"`
	SenderInfo              *SenderInfo `json:"sender_info,omitempty"`
	Type                    int         `json:"type"`
}

// GetAfterMsgsJSONBody defines parameters for GetAfterMsgs.
type GetAfterMsgsJSONBody = []AfterMsg

// GetUserDialogListParams defines parameters for GetUserDialogList.
type GetUserDialogListParams struct {
	PageNum  int `form:"page_num" json:"page_num"`
	PageSize int `form:"page_size" json:"page_size"`
}

// GetGroupMsgListParams defines parameters for GetGroupMsgList.
type GetGroupMsgListParams struct {
	DialogId int     `form:"dialog_id" json:"dialog_id"`
	MsgId    *int    `form:"msg_id,omitempty" json:"msg_id,omitempty"`
	UserId   *string `form:"user_id,omitempty" json:"user_id,omitempty"`
	Type     *int    `form:"type,omitempty" json:"type,omitempty"`
	Content  *string `form:"content,omitempty" json:"content,omitempty"`
	PageNum  int     `form:"page_num" json:"page_num"`
	PageSize int     `form:"page_size" json:"page_size"`
}

// GetGroupMessageReadersParams defines parameters for GetGroupMessageReaders.
type GetGroupMessageReadersParams struct {
	DialogId int `form:"dialog_id" json:"dialog_id"`
	GroupId  int `form:"group_id" json:"group_id"`
}

// GetUserMsgListParams defines parameters for GetUserMsgList.
type GetUserMsgListParams struct {
	DialogId int     `form:"dialog_id" json:"dialog_id"`
	Type     *int    `form:"type,omitempty" json:"type,omitempty"`
	UserId   *string `form:"user_id,omitempty" json:"user_id,omitempty"`
	Content  *string `form:"content,omitempty" json:"content,omitempty"`
	MsgId    *int    `form:"msg_id,omitempty" json:"msg_id,omitempty"`
	PageNum  int     `form:"page_num" json:"page_num"`
	PageSize int     `form:"page_size" json:"page_size"`
	StartAt  *int    `form:"start_at,omitempty" json:"start_at,omitempty"`
	EndAt    int     `form:"end_at" json:"end_at"`
}

// GetAfterMsgsJSONRequestBody defines body for GetAfterMsgs for application/json ContentType.
type GetAfterMsgsJSONRequestBody = GetAfterMsgsJSONBody

// GroupMessageReadJSONRequestBody defines body for GroupMessageRead for application/json ContentType.
type GroupMessageReadJSONRequestBody = GroupMessageReadRequest

// SendGroupMsgJSONRequestBody defines body for SendGroupMsg for application/json ContentType.
type SendGroupMsgJSONRequestBody = SendGroupMsgRequest

// EditGroupMsgJSONRequestBody defines body for EditGroupMsg for application/json ContentType.
type EditGroupMsgJSONRequestBody = EditGroupMsgRequest

// LabelGroupMsgJSONRequestBody defines body for LabelGroupMsg for application/json ContentType.
type LabelGroupMsgJSONRequestBody = LabelGroupMessageRequest

// ReadUserMsgsJSONRequestBody defines body for ReadUserMsgs for application/json ContentType.
type ReadUserMsgsJSONRequestBody = ReadUserMsgsRequest

// SendUserMsgJSONRequestBody defines body for SendUserMsg for application/json ContentType.
type SendUserMsgJSONRequestBody = SendUserMsgRequest

// EditUserMsgJSONRequestBody defines body for EditUserMsg for application/json ContentType.
type EditUserMsgJSONRequestBody = EditUserMsgRequest

// LabelUserMsgJSONRequestBody defines body for LabelUserMsg for application/json ContentType.
type LabelUserMsgJSONRequestBody = LabelUserMessageRequest
