syntax = "proto3";
package msg_v1;
option go_package = "github.com/cossim/coss-server/internal/msg/api/grpc/v1";

message SendUserMsgRequest{
  // @inject_tag: json:"sender_id"
  string SenderId=1;
  // @inject_tag: json:"receiver_id"
  string ReceiverId=2;
  // @inject_tag: json:"content"
  string Content=3;
  // @inject_tag: json:"type"
  int32 Type=4;
  // @inject_tag: json:"reply_id"
  uint64 ReplyId=5;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 6;
  // @inject_tag: json:"is_burn_after_reading"
  BurnAfterReadingType IsBurnAfterReadingType = 7;
}

message SendGroupMsgRequest{
  // @inject_tag: json:"user_id" form:"user_id" uri:"user_id"
  string UserId=1;
  // @inject_tag: json:"group_id" form:"group_id" uri:"group_id"
  uint32 GroupId=2;
  // @inject_tag: json:"content" form:"content" uri:"content"
  string Content=3;
  // @inject_tag: json:"type" form:"type" uri:"type"
  uint32 Type=4;
  // @inject_tag: json:"reply_id" form:"reply_id" uri:"reply_id"
  uint32 ReplyId=5;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 6;
  // @inject_tag: json:"is_burn_after_reading"
  BurnAfterReadingType IsBurnAfterReadingType = 7;
  // @inject_tag: json:"at_users"
  repeated string AtUsers = 8;
  // @inject_tag: json:"at_all_user"
  AtAllUserType AtAllUser = 9;
}

enum AtAllUserType {
  NotAtAllUser = 0;
  AtAllUser = 1;
}

enum BurnAfterReadingType{
    NotBurnAfterReading = 0; //非阅后即焚
    IsBurnAfterReading  = 1;                          //阅后即焚消息
}

// 定义 UserMessageType 枚举类型
enum MessageType {
  Unknown = 0; // 未知
  Text = 1;        // 文本消息
  Voice = 2;       // 语音消息
  Image = 3;       // 图片消息
  Label = 4;       // 标注
  Notice = 5;      // 群公告
  File = 6;        // 文件消息
  Video = 7;       // 视频消息
  EmojiReply = 8;  // emoji回复
  VoiceCall = 9;   // 语音通话
  VideoCall = 10;  // 视频通话
  Delete = 11;     // 撤回消息
  CancelLabel = 12; // 取消标注
}

message GetUserMsgListRequest{
  // @inject_tag: json:"dialog_id"
  uint32 DialogId=1;
  // @inject_tag: json:"user_id"
  string UserId=2;
  // @inject_tag: json:"type" form:"type" uri:"type"
  int32 Type = 3;
  // @inject_tag: json:"content" form:"content" uri:"content"
  string Content = 4;
  // @inject_tag: json:"page_size" form:"page_size" uri:"page_size"
  int32 PageSize = 5;
  // @inject_tag: json:"page_number" form:"page_number" uri:"page_number"
  int32 PageNum = 6;
  // @inject_tag: json:"msg_id"
  uint64 MsgId = 7;
}

message UserMessage{
  // @inject_tag: json:"id"
  uint32 Id=1;
  // @inject_tag: json:"sender_id"
  string SenderId=2;
  // @inject_tag: json:"receiver_id"
  string ReceiverId=3;
  // @inject_tag: json:"content"
  string Content=4;
  // @inject_tag: json:"type"
  uint32 Type=5;
  // @inject_tag: json:"reply_id"
  uint64 ReplyId=6;
  // @inject_tag: json:"is_read"
  int32 IsRead=7;
  // @inject_tag: json:"read_at"
  int64 ReadAt=8;
  // @inject_tag: json:"created_at"
  int64 CreatedAt=9;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 10;
  // @inject_tag: json:"is_label"
  MsgLabel IsLabel = 11;
  // @inject_tag: json:"is_burn_after_reading"
  BurnAfterReadingType IsBurnAfterReadingType = 12;
}

enum MsgLabel {
  NotLabel = 0; //未标注
  IsLabel = 1; //标注
}

message GroupMessage {
  // @inject_tag: json:"id"
  uint32 Id = 1;
  //  @inject_tag: json:"group_id"
  uint32 Group_id = 2;
  // @inject_tag: json:"type"
  uint32 Type = 3;
  // @inject_tag: json:"reply_idreply_id"
  uint32 reply_id = 4;
  // @inject_tag: json:"read_count"
  int32 Read_count = 5;
  // @inject_tag: json:"user_id"
  string UserId = 6;
  // @inject_tag: json:"content"
  string Content = 7;
  // @inject_tag: json:"created_at"
  int64 Created_at = 8;
  // @inject_tag: json:"dialog_id"
  uint32 Dialog_id = 9;
  // @inject_tag: json:"is_label"
  MsgLabel IsLabel = 10;
  // @inject_tag: json:"is_burn_after_reading"
  BurnAfterReadingType IsBurnAfterReadingType = 11;
  // @inject_tag: json:"at_users"
  repeated string AtUsers = 12;
  // @inject_tag: json:"at_all_user"
  AtAllUserType AtAllUser = 13;
}

message GetUserMsgListResponse{
  // @inject_tag: json:"user_messages" form:"user_messages" uri:"user_messages"
  repeated UserMessage UserMessages = 1;
  // @inject_tag: json:"total" form:"total" uri:"total"
  int32 Total = 2;
  // @inject_tag: json:"current_page" form:"current_page" uri:"current_page"
  int32 CurrentPage = 3;
}

message SendUserMsgResponse{
  // @inject_tag: json:"msg_id" form:"msg_id" uri:"msg_id"
  uint32 MsgId = 1;
}

message SendGroupMsgResponse{
  // @inject_tag: json:"msg_id" form:"msg_id" uri:"msg_id"
  uint32 MsgId = 1;
  // @inject_tag: json:"group_id" form:"group_id" uri:"group_id"
  uint32 GroupId = 2;
}

message UserMsgRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"friend_id"
  string FriendId = 2;
}

message GroupMsgRequest {
  // @inject_tag: json:"user_id"
  uint32 Group_id = 1;
}

message UserMessages {
  // @inject_tag: json:"user_messages"
  repeated UserMessage UserMessages = 1;
  // @inject_tag: json:"total"
  uint64 Total = 2;
}

message GroupMessages {
  // @inject_tag: json:"group_messages"
  repeated GroupMessage GroupMessages = 1;
  // @inject_tag: json:"total"
  uint64 Total = 2;
}

message UserMsgsRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"friend_id"
  repeated string Friend_id = 2;
}

message GroupMsgsRequest {
  // @inject_tag: json:"group_id"
  repeated uint32 Group_id = 1;
}

message LastMsg {
  // @inject_tag: json:"id"
  uint32 Id = 1;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 2;
  // @inject_tag: json:"type"
  uint32 Type = 3;
  // @inject_tag: json:"content"
  string content = 4;
  // @inject_tag: json:"created_at"
  int64 CreatedAt = 5;
  // @inject_tag: json:"sender_id"
  string SenderId = 6;
  // @inject_tag: json:"receiver_id"
  string ReceiverId = 7;
  // @inject_tag: json:"is_burn_after_reading"
  BurnAfterReadingType IsBurnAfterReadingType = 8;
  // @inject_tag: json:"at_users"
  repeated string AtUsers = 9;
  // @inject_tag: json:"at_all_user"
  AtAllUserType AtAllUser = 10;
  // @inject_tag: json:"is_label"
  MsgLabel IsLabel = 11;
  // @inject_tag: json:"reply_id"
  uint32 ReplyId = 12;
  // @inject_tag: json:"group_id"
  uint32 GroupId = 13;
  // @inject_tag: json:"is_read"
  int32 IsRead=14;
  // @inject_tag: json:"read_at"
  int64 ReadAt=15;
}

message GetLastMsgsResponse {
  // @inject_tag: json:"last_msgs"
  repeated LastMsg LastMsgs = 1;
}

message GetLastMsgsByDialogIdsRequest {
  // @inject_tag: json:"dialog_ids"
  repeated uint32 DialogIds = 1;
  // @inject_tag: json:"user_id"
  string UserId = 2;
}

message EditUserMsgRequest {
  // @inject_tag: json:"user_message"
  UserMessage UserMessage = 1;
}

message DeleteUserMsgRequest {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
}

message EditGroupMsgRequest {
  // @inject_tag: json:"group_message"
  GroupMessage GroupMessage = 1;
}

message DeleteGroupMsgRequest {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
}

message GetUserMsgByIDRequest {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
}

message GetGroupMsgByIDRequest {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
}

message SetUserMsgLabelRequest {
  // @inject_tag: json:"msg_id"
  uint32 msgId = 1;
  // @inject_tag: json:"is_label"
  MsgLabel IsLabel = 2;
}

message SetGroupMsgLabelRequest {
  // @inject_tag: json:"msg_id"
  uint32 msgId = 1;
  // @inject_tag: json:"is_label"
  MsgLabel IsLabel = 2;
}

message SetUserMsgLabelResponse {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
}

message SetGroupMsgLabelResponse {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
}

message GetUserMsgLabelByDialogIdRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
}

message GetGroupMsgLabelByDialogIdRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
}

message GetUserMsgLabelByDialogIdResponse {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  // @inject_tag: json:"msg_list"
  repeated UserMessage MsgList = 2;
}

message GetGroupMsgLabelByDialogIdResponse {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  // @inject_tag: json:"msg_list"
  repeated GroupMessage MsgList = 2;
}


enum ReadType {
  NotRead = 0; //未读
  IsRead = 1; //已读
}

message SetUserMsgsReadStatusRequest {
  // @inject_tag: json:"msg_ids"
  repeated uint32 MsgIds = 1;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 2;
  // @inject_tag: json:"open_burn_after_reading_time_out"
  int64 OpenBurnAfterReadingTimeOut = 3;
}

message SetUserMsgsReadStatusResponse {

}

message SetUserMsgReadStatusRequest {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
  // @inject_tag: json:"is_read"
  ReadType IsRead = 2;
}

message SetUserMsgReadStatusResponse {

}

message GetUnreadUserMsgsRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 2;
}



message GetUnreadUserMsgsResponse {
  // @inject_tag: json:"user_messages"
  repeated UserMessage UserMessages = 1;
}

message GetUserMsgIdAfterMsgRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 2;
}

message GetUserMsgIdAfterMsgListRequest{
  // @inject_tag: json:"dialog_ids"
  repeated GetUserMsgIdAfterMsgRequest list = 1;
}

message GetUserMsgIdAfterMsgResponse{
  // @inject_tag: json:"user_messages"
  repeated UserMessage UserMessages = 1;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 2;
  // @inject_tag: json:"total"
  uint64 Total = 3;
}

message GetUserMsgIdAfterMsgListResponse {
  // @inject_tag: json:"messages"
  repeated GetUserMsgIdAfterMsgResponse messages = 1;
}

message GetGroupMsgIdAfterMsgRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 2;
}

message GetGroupMsgIdAfterMsgListRequest{
  // @inject_tag: json:"dialog_ids"
  repeated GetGroupMsgIdAfterMsgRequest list = 1;
}

message GetGroupMsgIdAfterMsgResponse{
  // @inject_tag: json:"group_messages"
  repeated GroupMessage GroupMessages = 1;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 2;
  // @inject_tag: json:"total"
  uint64 Total = 3;
}

message GetGroupMsgIdAfterMsgListResponse {
  // @inject_tag: json:"messages"
  repeated GetGroupMsgIdAfterMsgResponse messages = 1;
}

message GetGroupMsgListRequest {
  // @inject_tag: json:"user_id" form:"user_id" uri:"user_id"
  string UserId=1;
  // @inject_tag: json:"type" form:"type" uri:"type"
  int32 Type = 2;
  // @inject_tag: json:"content" form:"content" uri:"content"
  string Content = 3;
  // @inject_tag: json:"page_size" form:"page_size" uri:"page_size"
  int32 PageSize = 4;
  // @inject_tag: json:"page_number" form:"page_number" uri:"page_number"
  int32 PageNum = 5;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId=6;
  // @inject_tag: json:"msg_id"
  uint64 MsgId = 7;
}

message GetGroupMessagesByIdsRequest{
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;
  // @inject_tag: json:"msg_ids"
  repeated uint32 MsgIds = 2;
}

message GetGroupMessagesByIdsResponse{
  // @inject_tag: json:"group_messages"
  repeated GroupMessage GroupMessages = 1;
}

message GetGroupMsgListResponse {
  // @inject_tag: json:"group_messages"
  repeated GroupMessage GroupMessages = 1;
  // @inject_tag: json:"total"
  int32 Total = 2;
  // @inject_tag: json:"current_page"
  int32 CurrentPage = 3;
}

message GetGroupUnreadMessagesRequest{
  // @inject_tag: json:"user_id" form:"user_id" uri:"user_id"
  string UserId=1;
  // @inject_tag: json:"dialog_id" form:"dialog_id" uri:"dialog_id"
  uint32 DialogId=2;
}

message GetGroupUnreadMessagesResponse{
  // @inject_tag: json:"group_messages"
  repeated GroupMessage GroupMessages = 1;
}

message GetUserMessagesByIdsRequest{
  // @inject_tag: json:"user_id" form:"user_id" uri:"user_id"
  string UserId=1;
  // @inject_tag: json:"msg_ids"
  repeated uint32 MsgIds = 2;
}

message GetUserMessagesByIdsResponse{
  // @inject_tag: json:"user_messages"
  repeated UserMessage UserMessages = 1;
}

message SendMultiUserMsgRequest{
  // @inject_tag: json:"msg_list"
  repeated SendUserMsgRequest MsgList = 1;
}

message SendMultiUserMsgResponse{

}

message  DeleteUserMsgByDialogIdRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
}

message  DeleteUserMsgByDialogIdResponse {

}

message DeleteGroupMsgByDialogIdRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
}

message  DeleteGroupMsgByDialogIdResponse {

}

message GetLastMsgListRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  // @inject_tag: json:"page_size"
  uint32 PageSize = 2;
  // @inject_tag: json:"page_number"
  uint32 PageNum = 3;
}

message ReadAllUserMsgRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  // @inject_tag: json:"user_id"
  string UserId = 2;
}

message ReadAllGroupMsgRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  // @inject_tag: json:"user_id"
  string UserId = 2;
}

message ReadAllUserMsgResponse {}

message ReadAllGroupMsgResponse {
  // @inject_tag: json:"msgs"
  repeated UnreadGroupMessage UnreadGroupMessage = 1;

}

message UnreadGroupMessage {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
  // @inject_tag: json:"user_id"
  string UserId = 2;
}

message MsgIdRequest{
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
}

message SendUserMsgRevertResponse{

}

message SendGroupMsgRevertResponse{

}

message DeleteUserMsgByIDRequest{
  // @inject_tag: json:"id"
  uint32 ID = 1;
}

message DeleteUserMsgByIDResponse{

}

service MsgService {
  //发送私聊消息
  rpc SendUserMessage(SendUserMsgRequest) returns(SendUserMsgResponse);
  //发送私聊消息
  rpc SendUserMessageRevert(MsgIdRequest)returns (SendUserMsgRevertResponse);
  //群发私聊消息
  rpc SendMultiUserMessage(SendMultiUserMsgRequest) returns(SendMultiUserMsgResponse);
  //发送群消息
  rpc SendGroupMessage(SendGroupMsgRequest) returns(SendGroupMsgResponse);
  //发送群消息回滚
  rpc SendGroupMessageRevert(MsgIdRequest)returns (SendGroupMsgRevertResponse);
  //获取用户消息列表
  rpc GetUserMessageList(GetUserMsgListRequest) returns(GetUserMsgListResponse);
  //获取私聊对话最新消息
  rpc GetUserLastMessageList(GetLastMsgListRequest)returns(UserMessages);
  //获取群聊对话最新消息
  rpc GetGroupLastMessageList(GetLastMsgListRequest) returns(GroupMessages);


  //根据好友id获取最后一条消息
  rpc GetLastMsgsForUserWithFriends(UserMsgsRequest) returns (UserMessages);
  //根据群组id获取最后一条消息
  rpc GetLastMsgsForGroupsWithIDs(GroupMsgsRequest) returns (GroupMessages);
  //根据对话id获取最后一条消息
  rpc GetLastMsgsByDialogIds(GetLastMsgsByDialogIdsRequest) returns (GetLastMsgsResponse);
  //编辑私聊消息
  rpc EditUserMessage(EditUserMsgRequest) returns (UserMessage);
  //撤回私聊消息
  rpc DeleteUserMessage(DeleteUserMsgRequest) returns (UserMessage);
  //根据对话id与msgId查询msgId之后的私聊消息
  rpc GetUserMsgIdAfterMsgList(GetUserMsgIdAfterMsgListRequest) returns (GetUserMsgIdAfterMsgListResponse);

  //获取群消息列表
  rpc GetGroupMessageList(GetGroupMsgListRequest) returns(GetGroupMsgListResponse);
  //编辑群消息
  rpc EditGroupMessage(EditGroupMsgRequest) returns (GroupMessage);
  //撤回群消息
  rpc DeleteGroupMessage(DeleteGroupMsgRequest) returns (GroupMessage);
  //根据消息id获取私聊消息
  rpc GetUserMessageById(GetUserMsgByIDRequest) returns (UserMessage);
  //根据消息id获取群消息
  rpc GetGroupMessageById(GetGroupMsgByIDRequest) returns (GroupMessage);
  //根据多个消息id获取私聊消息
  rpc GetUserMessagesByIds(GetUserMessagesByIdsRequest) returns (GetUserMessagesByIdsResponse);
  //根据多个消息id获取群消息
  rpc GetGroupMessagesByIds(GetGroupMessagesByIdsRequest) returns (GetGroupMessagesByIdsResponse);
  //设置私聊消息标注状态
  rpc SetUserMsgLabel(SetUserMsgLabelRequest) returns (SetUserMsgLabelResponse);
  // 设置群消息标注状态
  rpc SetGroupMsgLabel(SetGroupMsgLabelRequest) returns (SetGroupMsgLabelResponse);
  //根据对话id获取私聊标注信息
  rpc GetUserMsgLabelByDialogId(GetUserMsgLabelByDialogIdRequest) returns (GetUserMsgLabelByDialogIdResponse);
  //根据对话id获取群消息标注信息
  rpc GetGroupMsgLabelByDialogId(GetGroupMsgLabelByDialogIdRequest) returns (GetGroupMsgLabelByDialogIdResponse);
  //根据对话id与msgId查询msgId之后的群消息
  rpc GetGroupMsgIdAfterMsgList(GetGroupMsgIdAfterMsgListRequest) returns (GetGroupMsgIdAfterMsgListResponse);
  //获取群聊未读消息
  rpc GetGroupUnreadMessages(GetGroupUnreadMessagesRequest) returns (GetGroupUnreadMessagesResponse);

  // 一键已读用户消息
  rpc ReadAllUserMsg(ReadAllUserMsgRequest) returns (ReadAllUserMsgResponse);

  // 一键已读群聊消息
  rpc ReadAllGroupMsg(ReadAllGroupMsgRequest) returns (ReadAllGroupMsgResponse);

  //批量设置私聊消息id为已读
  rpc SetUserMsgsReadStatus(SetUserMsgsReadStatusRequest) returns (SetUserMsgsReadStatusResponse);
  //修改指定私聊消息的已读状态
  rpc SetUserMsgReadStatus(SetUserMsgReadStatusRequest) returns (SetUserMsgReadStatusResponse);
  //获取私聊对话未读消息
  rpc GetUnreadUserMsgs(GetUnreadUserMsgsRequest) returns (GetUnreadUserMsgsResponse);
  //确认根据对话id删除私聊消息
  rpc ConfirmDeleteUserMessageByDialogId(DeleteUserMsgByDialogIdRequest) returns (DeleteUserMsgByDialogIdResponse);
  //确认根据对话id删除群聊消息
  rpc ConfirmDeleteGroupMessageByDialogId(DeleteGroupMsgByDialogIdRequest) returns (DeleteGroupMsgByDialogIdResponse);
  //根据对话id删除私聊消息
  rpc DeleteUserMessageByDialogId(DeleteUserMsgByDialogIdRequest) returns (DeleteUserMsgByDialogIdResponse);
  //根据对话id删除群聊消息
  rpc DeleteGroupMessageByDialogId(DeleteGroupMsgByDialogIdRequest) returns (DeleteGroupMsgByDialogIdResponse);
  //根据对话id删除私聊消息回滚
  rpc DeleteUserMessageByDialogIdRollback(DeleteUserMsgByDialogIdRequest) returns (DeleteUserMsgByDialogIdResponse);
  //根据对话id删除群聊消息回滚
  rpc DeleteGroupMessageByDialogIdRollback(DeleteUserMsgByDialogIdRequest) returns (DeleteGroupMsgByDialogIdResponse);
  //根据消息id删除私聊消息
  rpc DeleteUserMessageById(DeleteUserMsgByIDRequest) returns (DeleteUserMsgByIDResponse);
}