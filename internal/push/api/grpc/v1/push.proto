syntax = "proto3";
package push_v1;
option go_package = "github.com/cossim/coss-server/internal/push/api/grpc/v1";
import "google/protobuf/any.proto";

enum Type {
  Ws = 0; //ws推送
  Mobile = 1; //移动端推送
  Email = 2; //邮件推送
  Message = 3; //短信推送
  Ws_Batch = 4; //批量ws推送
  Ws_Batch_User = 5; //批量ws推送
}

message PushRequest {
  // @inject_tag: json:"type"
  Type type = 1;
  // @inject_tag: json:"data"
  bytes data = 2;
}

message PushResponse {
}

message SendWsUserMsg {
  // @inject_tag: json:"msg_id"
  uint32 msg_id = 1;
  // @inject_tag: json:"sender_id"
  string sender_id = 2;
  // @inject_tag: json:"receiver_id"
  string receiver_id = 3;
  // @inject_tag: json:"content"
  string content = 4;
  // @inject_tag: json:"msg_type"
  uint32 msg_type = 5;
  // @inject_tag: json:"reply_id"
  uint32 reply_id = 6;
  // @inject_tag: json:"send_at"
  int64 send_at = 7;
  // @inject_tag: json:"dialog_id"
  uint32 dialog_id = 8;
  // @inject_tag: json:"at_users"
  bool is_burn_after_reading = 9;
  // @inject_tag: json:"burn_after_reading_time_out"
  int64 burn_after_reading_time_out = 10;
  // @inject_tag: json:"sender_info"
  SenderInfo sender_info = 11;
  // @inject_tag: json:"reply_msg"
  MessageInfo reply_msg = 12;
}

message SenderInfo {
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"avatar"
  string Avatar = 2;
  // @inject_tag: json:"name"
  string Name = 3;
}

message WsUserOperatorMsg{
  // @inject_tag: json:"id"
  uint32 MsgId = 1;
  // @inject_tag: json:"sender_id"
  string SenderId = 2;
  // @inject_tag: json:"receiver_id"
  string ReceiverId = 3;
  // @inject_tag: json:"content"
  string Content = 4;
  // @inject_tag: json:"msg_type"
  uint32 Type = 5;
  // @inject_tag: json:"reply_id"
  uint32 ReplyId = 6;
  // @inject_tag: json:"send_at"
  bool IsRead = 7;
  // @inject_tag: json:"read_at"
  int64 ReadAt = 8;
  // @inject_tag: json:"created_at"
  int64 CreatedAt = 9;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 10;
  // @inject_tag: json:"is_label"
  bool IsLabel = 11;
  // @inject_tag: json:"is_burn_after_reading_type"
  bool IsBurnAfterReadingType = 12;
  // @inject_tag: json:"sender_info"
  SenderInfo SenderInfo = 13;
  // @inject_tag: json:"reply_msg"
  MessageInfo ReplyMsg = 14;
  // @inject_tag: json:"at_users"
  repeated string AtUsers = 15;
  // @inject_tag: json:"is_burn_after_reading"
  bool IsBurnAfterReading = 16;
  // @inject_tag: json:"burn_after_reading_time_out"
  int64 BurnAfterReadingTimeOut = 17;
}

message SendWsGroupMsg {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
  // @inject_tag: json:"group_id"
  int64 GroupId = 2;
  // @inject_tag: json:"sender_id"
  string SenderId = 3;
  // @inject_tag: json:"content"
  string Content = 4;
  // @inject_tag: json:"msg_type"
  uint32 MsgType = 5;
  // @inject_tag: json:"reply_id"
  uint32 ReplyId = 6;
  // @inject_tag: json:"send_at"
  int64 SendAt = 7;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 8;
  // @inject_tag: json:"at_users"
  repeated string AtUsers = 9;
  // @inject_tag: json:"at_all_users"
  bool AtAllUsers = 10;
  // @inject_tag: json:"is_burn_after_reading"
  bool IsBurnAfterReading = 11;
  // @inject_tag: json:"sender_info"
  SenderInfo SenderInfo = 12;
  // @inject_tag: json:"reply_msg"
  MessageInfo ReplyMsg = 13;
}

message MessageInfo {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;
  // @inject_tag: json:"msg_type"
  uint32 MsgType = 2;
  // @inject_tag: json:"content"
  string Content = 3;
  // @inject_tag: json:"sender_id"
  string SenderId = 4;
  // @inject_tag: json:"send_at"
  int64 SendAt = 5;
  // @inject_tag: json:"msg_id"
  uint64 MsgId = 6;
  // @inject_tag: json:"sender_info"
  SenderInfo SenderInfo = 7;
  // @inject_tag: json:"receiver_info"
  SenderInfo ReceiverInfo = 8;
  // @inject_tag: json:"at_all_users"
  bool AtAllUser = 9;
  // @inject_tag: json:"at_users"
  repeated string AtUsers = 10;
  // @inject_tag: json:"is_burn_after_reading"
  bool IsBurnAfterReading = 11;
  // @inject_tag: json:"is_label"
  bool IsLabel = 12;
  // @inject_tag: json:"reply_id"
  uint32 ReplyId = 13;
  // @inject_tag: json:"is_read"
  bool IsRead = 14;
  // @inject_tag: json:"read_at"
  int64 ReadAt = 15;
}

enum WSEventType {
  UnknownEvent = 0;
  OnlineEvent = 1;
  OfflineEvent = 2;
  SendUserMessageEvent = 3;
  SendGroupMessageEvent = 4;
  SystemNotificationEvent = 5;
  AddFriendEvent = 6;
  ManageFriendEvent = 7;
  PushE2EPublicKeyEvent = 8;
  JoinGroupEvent = 9;
  ApproveJoinGroupEvent = 10;
  InviteJoinGroupEvent = 11;
  SendSilentUserMessageEvent = 12;
  SendSilentGroupMessageEvent = 13;
  UserCallReqEvent = 14;
  GroupCallReqEvent = 15;
  UserCallRejectEvent = 16;
  GroupCallRejectEvent = 17;
  UserCallEndEvent = 18;
  GroupCallEndEvent = 19;
  GroupMsgReadEvent = 20;
  FriendUpdateOnlineStatusEvent = 21;
  PushAllFriendOnlineStatusEvent = 22;
  LabelMsgEvent = 23;
  EditMsgEvent = 24;
  RecallMsgEvent = 25;
  UserMsgReadEvent = 26;
  UserCallAcceptEvent = 27;
  GroupCallAcceptEvent = 28;
  CreateGroupAnnouncementEvent = 29;
  UpdateGroupAnnouncementEvent = 30;
  UserLeaveGroupCallEvent = 31;
}

message WsMsg {
  // @inject_tag: json:"uid"
  string Uid = 1;
  // @inject_tag: json:"event"
  WSEventType Event = 2;
  // @inject_tag: json:"rid"
  string Rid = 3;
  // @inject_tag: json:"driver_id"
  string DriverId = 4;
  // @inject_tag: json:"send_at"
  int64 SendAt = 5;
  // @inject_tag: json:"push_offline"
  bool PushOffline = 7;
  // @inject_tag: json:"data"
  google.protobuf.Any data = 6;
}

//    driverId string, event constants.WSEventType, data interface{}, pushOffline bool
message PushWsBatchByUserIdsRequest {
  // @inject_tag: json:"user_ids"
  repeated string UserIds = 1;
  // @inject_tag: json:"event"
  WSEventType Event = 2;
  // @inject_tag: json:"data"
  google.protobuf.Any Data = 3;
  // @inject_tag: json:"push_offline"
  bool PushOffline = 4;
  // @inject_tag: json:"driver_id"
  string DriverId = 5;
}

message PushWsBatchRequest {
  // @inject_tag: json:"msgs"
  repeated WsMsg Msgs = 1;
}

service PushService {
  rpc Push(PushRequest) returns (PushResponse);
}