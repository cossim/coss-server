// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: api/grpc/v1/push.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_Ws            Type = 0 //ws推送
	Type_Mobile        Type = 1 //移动端推送
	Type_Email         Type = 2 //邮件推送
	Type_Message       Type = 3 //短信推送
	Type_Ws_Batch      Type = 4 //批量ws推送
	Type_Ws_Batch_User Type = 5 //批量ws推送
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "Ws",
		1: "Mobile",
		2: "Email",
		3: "Message",
		4: "Ws_Batch",
		5: "Ws_Batch_User",
	}
	Type_value = map[string]int32{
		"Ws":            0,
		"Mobile":        1,
		"Email":         2,
		"Message":       3,
		"Ws_Batch":      4,
		"Ws_Batch_User": 5,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_grpc_v1_push_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_api_grpc_v1_push_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_api_grpc_v1_push_proto_rawDescGZIP(), []int{0}
}

type WSEventType int32

const (
	WSEventType_UnknownEvent                   WSEventType = 0
	WSEventType_OnlineEvent                    WSEventType = 1
	WSEventType_OfflineEvent                   WSEventType = 2
	WSEventType_SendUserMessageEvent           WSEventType = 3
	WSEventType_SendGroupMessageEvent          WSEventType = 4
	WSEventType_SystemNotificationEvent        WSEventType = 5
	WSEventType_AddFriendEvent                 WSEventType = 6
	WSEventType_ManageFriendEvent              WSEventType = 7
	WSEventType_PushE2EPublicKeyEvent          WSEventType = 8
	WSEventType_JoinGroupEvent                 WSEventType = 9
	WSEventType_ApproveJoinGroupEvent          WSEventType = 10
	WSEventType_InviteJoinGroupEvent           WSEventType = 11
	WSEventType_SendSilentUserMessageEvent     WSEventType = 12
	WSEventType_SendSilentGroupMessageEvent    WSEventType = 13
	WSEventType_UserCallReqEvent               WSEventType = 14
	WSEventType_GroupCallReqEvent              WSEventType = 15
	WSEventType_UserCallRejectEvent            WSEventType = 16
	WSEventType_GroupCallRejectEvent           WSEventType = 17
	WSEventType_UserCallEndEvent               WSEventType = 18
	WSEventType_GroupCallEndEvent              WSEventType = 19
	WSEventType_GroupMsgReadEvent              WSEventType = 20
	WSEventType_FriendUpdateOnlineStatusEvent  WSEventType = 21
	WSEventType_PushAllFriendOnlineStatusEvent WSEventType = 22
	WSEventType_LabelMsgEvent                  WSEventType = 23
	WSEventType_EditMsgEvent                   WSEventType = 24
	WSEventType_RecallMsgEvent                 WSEventType = 25
	WSEventType_UserMsgReadEvent               WSEventType = 26
	WSEventType_UserCallAcceptEvent            WSEventType = 27
	WSEventType_GroupCallAcceptEvent           WSEventType = 28
	WSEventType_CreateGroupAnnouncementEvent   WSEventType = 29
	WSEventType_UpdateGroupAnnouncementEvent   WSEventType = 30
	WSEventType_UserLeaveGroupCallEvent        WSEventType = 31
)

// Enum value maps for WSEventType.
var (
	WSEventType_name = map[int32]string{
		0:  "UnknownEvent",
		1:  "OnlineEvent",
		2:  "OfflineEvent",
		3:  "SendUserMessageEvent",
		4:  "SendGroupMessageEvent",
		5:  "SystemNotificationEvent",
		6:  "AddFriendEvent",
		7:  "ManageFriendEvent",
		8:  "PushE2EPublicKeyEvent",
		9:  "JoinGroupEvent",
		10: "ApproveJoinGroupEvent",
		11: "InviteJoinGroupEvent",
		12: "SendSilentUserMessageEvent",
		13: "SendSilentGroupMessageEvent",
		14: "UserCallReqEvent",
		15: "GroupCallReqEvent",
		16: "UserCallRejectEvent",
		17: "GroupCallRejectEvent",
		18: "UserCallEndEvent",
		19: "GroupCallEndEvent",
		20: "GroupMsgReadEvent",
		21: "FriendUpdateOnlineStatusEvent",
		22: "PushAllFriendOnlineStatusEvent",
		23: "LabelMsgEvent",
		24: "EditMsgEvent",
		25: "RecallMsgEvent",
		26: "UserMsgReadEvent",
		27: "UserCallAcceptEvent",
		28: "GroupCallAcceptEvent",
		29: "CreateGroupAnnouncementEvent",
		30: "UpdateGroupAnnouncementEvent",
		31: "UserLeaveGroupCallEvent",
	}
	WSEventType_value = map[string]int32{
		"UnknownEvent":                   0,
		"OnlineEvent":                    1,
		"OfflineEvent":                   2,
		"SendUserMessageEvent":           3,
		"SendGroupMessageEvent":          4,
		"SystemNotificationEvent":        5,
		"AddFriendEvent":                 6,
		"ManageFriendEvent":              7,
		"PushE2EPublicKeyEvent":          8,
		"JoinGroupEvent":                 9,
		"ApproveJoinGroupEvent":          10,
		"InviteJoinGroupEvent":           11,
		"SendSilentUserMessageEvent":     12,
		"SendSilentGroupMessageEvent":    13,
		"UserCallReqEvent":               14,
		"GroupCallReqEvent":              15,
		"UserCallRejectEvent":            16,
		"GroupCallRejectEvent":           17,
		"UserCallEndEvent":               18,
		"GroupCallEndEvent":              19,
		"GroupMsgReadEvent":              20,
		"FriendUpdateOnlineStatusEvent":  21,
		"PushAllFriendOnlineStatusEvent": 22,
		"LabelMsgEvent":                  23,
		"EditMsgEvent":                   24,
		"RecallMsgEvent":                 25,
		"UserMsgReadEvent":               26,
		"UserCallAcceptEvent":            27,
		"GroupCallAcceptEvent":           28,
		"CreateGroupAnnouncementEvent":   29,
		"UpdateGroupAnnouncementEvent":   30,
		"UserLeaveGroupCallEvent":        31,
	}
)

func (x WSEventType) Enum() *WSEventType {
	p := new(WSEventType)
	*p = x
	return p
}

func (x WSEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WSEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_grpc_v1_push_proto_enumTypes[1].Descriptor()
}

func (WSEventType) Type() protoreflect.EnumType {
	return &file_api_grpc_v1_push_proto_enumTypes[1]
}

func (x WSEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WSEventType.Descriptor instead.
func (WSEventType) EnumDescriptor() ([]byte, []int) {
	return file_api_grpc_v1_push_proto_rawDescGZIP(), []int{1}
}

type PushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"type"
	Type Type `protobuf:"varint,1,opt,name=type,proto3,enum=v1.Type" json:"type"`
	// @inject_tag: json:"data"
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *PushRequest) Reset() {
	*x = PushRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_push_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushRequest) ProtoMessage() {}

func (x *PushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_push_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushRequest.ProtoReflect.Descriptor instead.
func (*PushRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_push_proto_rawDescGZIP(), []int{0}
}

func (x *PushRequest) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_Ws
}

func (x *PushRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PushResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushResponse) Reset() {
	*x = PushResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_push_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushResponse) ProtoMessage() {}

func (x *PushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_push_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushResponse.ProtoReflect.Descriptor instead.
func (*PushResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_push_proto_rawDescGZIP(), []int{1}
}

type WsMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"uid"
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid"`
	// @inject_tag: json:"event"
	Event WSEventType `protobuf:"varint,2,opt,name=event,proto3,enum=v1.WSEventType" json:"event"`
	// @inject_tag: json:"rid"
	Rid int64 `protobuf:"varint,3,opt,name=rid,proto3" json:"rid"`
	// @inject_tag: json:"driver_id"
	DriverId string `protobuf:"bytes,4,opt,name=driverId,proto3" json:"driver_id"`
	// @inject_tag: json:"send_at"
	SendAt int64 `protobuf:"varint,5,opt,name=send_at,json=sendAt,proto3" json:"send_at"`
	// @inject_tag: json:"push_offline"
	PushOffline bool `protobuf:"varint,7,opt,name=PushOffline,proto3" json:"push_offline"`
	// @inject_tag: json:"data"
	Data *anypb.Any `protobuf:"bytes,6,opt,name=data,proto3" json:"data"`
}

func (x *WsMsg) Reset() {
	*x = WsMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_push_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WsMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WsMsg) ProtoMessage() {}

func (x *WsMsg) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_push_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WsMsg.ProtoReflect.Descriptor instead.
func (*WsMsg) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_push_proto_rawDescGZIP(), []int{2}
}

func (x *WsMsg) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *WsMsg) GetEvent() WSEventType {
	if x != nil {
		return x.Event
	}
	return WSEventType_UnknownEvent
}

func (x *WsMsg) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *WsMsg) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *WsMsg) GetSendAt() int64 {
	if x != nil {
		return x.SendAt
	}
	return 0
}

func (x *WsMsg) GetPushOffline() bool {
	if x != nil {
		return x.PushOffline
	}
	return false
}

func (x *WsMsg) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

// driverId string, event constants.WSEventType, data interface{}, pushOffline bool
type PushWsBatchByUserIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_ids"
	UserIds []string `protobuf:"bytes,1,rep,name=UserIds,proto3" json:"user_ids"`
	// @inject_tag: json:"event"
	Event WSEventType `protobuf:"varint,2,opt,name=Event,proto3,enum=v1.WSEventType" json:"event"`
	// @inject_tag: json:"data"
	Data *anypb.Any `protobuf:"bytes,3,opt,name=Data,proto3" json:"data"`
	// @inject_tag: json:"push_offline"
	PushOffline bool `protobuf:"varint,4,opt,name=PushOffline,proto3" json:"push_offline"`
	// @inject_tag: json:"driver_id"
	DriverId string `protobuf:"bytes,5,opt,name=DriverId,proto3" json:"driver_id"`
}

func (x *PushWsBatchByUserIdsRequest) Reset() {
	*x = PushWsBatchByUserIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_push_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushWsBatchByUserIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushWsBatchByUserIdsRequest) ProtoMessage() {}

func (x *PushWsBatchByUserIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_push_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushWsBatchByUserIdsRequest.ProtoReflect.Descriptor instead.
func (*PushWsBatchByUserIdsRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_push_proto_rawDescGZIP(), []int{3}
}

func (x *PushWsBatchByUserIdsRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *PushWsBatchByUserIdsRequest) GetEvent() WSEventType {
	if x != nil {
		return x.Event
	}
	return WSEventType_UnknownEvent
}

func (x *PushWsBatchByUserIdsRequest) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PushWsBatchByUserIdsRequest) GetPushOffline() bool {
	if x != nil {
		return x.PushOffline
	}
	return false
}

func (x *PushWsBatchByUserIdsRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type PushWsBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"msgs"
	Msgs []*WsMsg `protobuf:"bytes,1,rep,name=Msgs,proto3" json:"msgs"`
}

func (x *PushWsBatchRequest) Reset() {
	*x = PushWsBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_push_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushWsBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushWsBatchRequest) ProtoMessage() {}

func (x *PushWsBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_push_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushWsBatchRequest.ProtoReflect.Descriptor instead.
func (*PushWsBatchRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_push_proto_rawDescGZIP(), []int{4}
}

func (x *PushWsBatchRequest) GetMsgs() []*WsMsg {
	if x != nil {
		return x.Msgs
	}
	return nil
}

var File_api_grpc_v1_push_proto protoreflect.FileDescriptor

var file_api_grpc_v1_push_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75,
	0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x05, 0x57, 0x73, 0x4d,
	0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x53, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc6,
	0x01, 0x0a, 0x1b, 0x50, 0x75, 0x73, 0x68, 0x57, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x53, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x28, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x75, 0x73,
	0x68, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x50, 0x75, 0x73, 0x68, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x57,
	0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x04, 0x4d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x73, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x4d, 0x73, 0x67, 0x73, 0x2a, 0x53, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x57, 0x73, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x57, 0x73, 0x5f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x10, 0x04, 0x12, 0x11,
	0x0a, 0x0d, 0x57, 0x73, 0x5f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x10,
	0x05, 0x2a, 0xb2, 0x06, 0x0a, 0x0b, 0x57, 0x53, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x03,
	0x12, 0x19, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x75, 0x73, 0x68, 0x45, 0x32, 0x45, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x08, 0x12, 0x12,
	0x0a, 0x0e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x10, 0x09, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x0a, 0x12, 0x18, 0x0a,
	0x14, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x0b, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x69, 0x6c, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x0c, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x69, 0x6c, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x0e, 0x12, 0x15,
	0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x10, 0x0f, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x10, 0x12, 0x18,
	0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x11, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x12, 0x12, 0x15,
	0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x10, 0x13, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x14, 0x12, 0x21, 0x0a, 0x1d,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x15, 0x12,
	0x22, 0x0a, 0x1e, 0x50, 0x75, 0x73, 0x68, 0x41, 0x6c, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0x16, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x10, 0x17, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x73,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x18, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x61,
	0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x19, 0x12, 0x14, 0x0a, 0x10,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x10, 0x1a, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x1b, 0x12, 0x18, 0x0a, 0x14, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x10, 0x1c, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x1d, 0x12, 0x20, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x1e, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x10, 0x1f, 0x32, 0x38, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x0f, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x73, 0x73, 0x69, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_grpc_v1_push_proto_rawDescOnce sync.Once
	file_api_grpc_v1_push_proto_rawDescData = file_api_grpc_v1_push_proto_rawDesc
)

func file_api_grpc_v1_push_proto_rawDescGZIP() []byte {
	file_api_grpc_v1_push_proto_rawDescOnce.Do(func() {
		file_api_grpc_v1_push_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_grpc_v1_push_proto_rawDescData)
	})
	return file_api_grpc_v1_push_proto_rawDescData
}

var file_api_grpc_v1_push_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_grpc_v1_push_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_grpc_v1_push_proto_goTypes = []interface{}{
	(Type)(0),                           // 0: v1.Type
	(WSEventType)(0),                    // 1: v1.WSEventType
	(*PushRequest)(nil),                 // 2: v1.PushRequest
	(*PushResponse)(nil),                // 3: v1.PushResponse
	(*WsMsg)(nil),                       // 4: v1.WsMsg
	(*PushWsBatchByUserIdsRequest)(nil), // 5: v1.PushWsBatchByUserIdsRequest
	(*PushWsBatchRequest)(nil),          // 6: v1.PushWsBatchRequest
	(*anypb.Any)(nil),                   // 7: google.protobuf.Any
}
var file_api_grpc_v1_push_proto_depIdxs = []int32{
	0, // 0: v1.PushRequest.type:type_name -> v1.Type
	1, // 1: v1.WsMsg.event:type_name -> v1.WSEventType
	7, // 2: v1.WsMsg.data:type_name -> google.protobuf.Any
	1, // 3: v1.PushWsBatchByUserIdsRequest.Event:type_name -> v1.WSEventType
	7, // 4: v1.PushWsBatchByUserIdsRequest.Data:type_name -> google.protobuf.Any
	4, // 5: v1.PushWsBatchRequest.Msgs:type_name -> v1.WsMsg
	2, // 6: v1.PushService.Push:input_type -> v1.PushRequest
	3, // 7: v1.PushService.Push:output_type -> v1.PushResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_api_grpc_v1_push_proto_init() }
func file_api_grpc_v1_push_proto_init() {
	if File_api_grpc_v1_push_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_grpc_v1_push_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_push_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_push_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WsMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_push_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushWsBatchByUserIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_push_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushWsBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_grpc_v1_push_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_grpc_v1_push_proto_goTypes,
		DependencyIndexes: file_api_grpc_v1_push_proto_depIdxs,
		EnumInfos:         file_api_grpc_v1_push_proto_enumTypes,
		MessageInfos:      file_api_grpc_v1_push_proto_msgTypes,
	}.Build()
	File_api_grpc_v1_push_proto = out.File
	file_api_grpc_v1_push_proto_rawDesc = nil
	file_api_grpc_v1_push_proto_goTypes = nil
	file_api_grpc_v1_push_proto_depIdxs = nil
}
