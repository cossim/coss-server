// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: api/grpc/v1/user_relation.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RelationStatus int32

const (
	RelationStatus_RELATION_STATUS_BLOCKED RelationStatus = 0 // 已拉黑
	RelationStatus_RELATION_NORMAL         RelationStatus = 1 // 正常
	RelationStatus_RELATION_STATUS_DELETED RelationStatus = 2 // 已删除
)

// Enum value maps for RelationStatus.
var (
	RelationStatus_name = map[int32]string{
		0: "RELATION_STATUS_BLOCKED",
		1: "RELATION_NORMAL",
		2: "RELATION_STATUS_DELETED",
	}
	RelationStatus_value = map[string]int32{
		"RELATION_STATUS_BLOCKED": 0,
		"RELATION_NORMAL":         1,
		"RELATION_STATUS_DELETED": 2,
	}
)

func (x RelationStatus) Enum() *RelationStatus {
	p := new(RelationStatus)
	*p = x
	return p
}

func (x RelationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_grpc_v1_user_relation_proto_enumTypes[0].Descriptor()
}

func (RelationStatus) Type() protoreflect.EnumType {
	return &file_api_grpc_v1_user_relation_proto_enumTypes[0]
}

func (x RelationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelationStatus.Descriptor instead.
func (RelationStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{0}
}

type UserSilentNotificationType int32

const (
	// @inject_tag: json:"not_silent"
	UserSilentNotificationType_UserNotSilent UserSilentNotificationType = 0
	// @inject_tag: json:"silent"
	UserSilentNotificationType_UserSilent UserSilentNotificationType = 1
)

// Enum value maps for UserSilentNotificationType.
var (
	UserSilentNotificationType_name = map[int32]string{
		0: "UserNotSilent",
		1: "UserSilent",
	}
	UserSilentNotificationType_value = map[string]int32{
		"UserNotSilent": 0,
		"UserSilent":    1,
	}
)

func (x UserSilentNotificationType) Enum() *UserSilentNotificationType {
	p := new(UserSilentNotificationType)
	*p = x
	return p
}

func (x UserSilentNotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSilentNotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_grpc_v1_user_relation_proto_enumTypes[1].Descriptor()
}

func (UserSilentNotificationType) Type() protoreflect.EnumType {
	return &file_api_grpc_v1_user_relation_proto_enumTypes[1]
}

func (x UserSilentNotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSilentNotificationType.Descriptor instead.
func (UserSilentNotificationType) EnumDescriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{1}
}

type AddFriendAfterDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id"` // 用户id
	// @inject_tag: json:"friend_id"
	FriendId string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"friend_id"` // 好友id
}

func (x *AddFriendAfterDeleteRequest) Reset() {
	*x = AddFriendAfterDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendAfterDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendAfterDeleteRequest) ProtoMessage() {}

func (x *AddFriendAfterDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendAfterDeleteRequest.ProtoReflect.Descriptor instead.
func (*AddFriendAfterDeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{0}
}

func (x *AddFriendAfterDeleteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddFriendAfterDeleteRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type AddFriendAfterDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddFriendAfterDeleteResponse) Reset() {
	*x = AddFriendAfterDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendAfterDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendAfterDeleteResponse) ProtoMessage() {}

func (x *AddFriendAfterDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendAfterDeleteResponse.ProtoReflect.Descriptor instead.
func (*AddFriendAfterDeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{1}
}

type AddFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id"` // 用户id
	// @inject_tag: json:"friend_id"
	FriendId string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"friend_id"` // 好友id
}

func (x *AddFriendRequest) Reset() {
	*x = AddFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendRequest) ProtoMessage() {}

func (x *AddFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendRequest.ProtoReflect.Descriptor instead.
func (*AddFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{2}
}

func (x *AddFriendRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddFriendRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type AddFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddFriendResponse) Reset() {
	*x = AddFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendResponse) ProtoMessage() {}

func (x *AddFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendResponse.ProtoReflect.Descriptor instead.
func (*AddFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{3}
}

type ManageFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id" form:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id" form:"user_id"`
	// @inject_tag: json:"friend_id" form:"friend_id"
	FriendId string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"friend_id" form:"friend_id"`
	// @inject_tag: json:"dialog_id" form:"dialog_id"
	DialogId uint32 `protobuf:"varint,3,opt,name=DialogId,proto3" json:"dialog_id" form:"dialog_id"`
	// @inject_tag: json:"status" form:"status"
	Status RelationStatus `protobuf:"varint,4,opt,name=Status,proto3,enum=relation_v1.RelationStatus" json:"status" form:"status"`
}

func (x *ManageFriendRequest) Reset() {
	*x = ManageFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageFriendRequest) ProtoMessage() {}

func (x *ManageFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageFriendRequest.ProtoReflect.Descriptor instead.
func (*ManageFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{4}
}

func (x *ManageFriendRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ManageFriendRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *ManageFriendRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *ManageFriendRequest) GetStatus() RelationStatus {
	if x != nil {
		return x.Status
	}
	return RelationStatus_RELATION_STATUS_BLOCKED
}

type ManageFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ManageFriendResponse) Reset() {
	*x = ManageFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageFriendResponse) ProtoMessage() {}

func (x *ManageFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageFriendResponse.ProtoReflect.Descriptor instead.
func (*ManageFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{5}
}

type DeleteFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id" form:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id" form:"user_id"`
	// @inject_tag: json:"friend_id" form:"friend_id"
	FriendId string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"friend_id" form:"friend_id"`
}

func (x *DeleteFriendRequest) Reset() {
	*x = DeleteFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRequest) ProtoMessage() {}

func (x *DeleteFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRequest.ProtoReflect.Descriptor instead.
func (*DeleteFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteFriendRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteFriendRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type DeleteFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFriendResponse) Reset() {
	*x = DeleteFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendResponse) ProtoMessage() {}

func (x *DeleteFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendResponse.ProtoReflect.Descriptor instead.
func (*DeleteFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{7}
}

type AddBlacklistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id" form:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id" form:"user_id"`
	// @inject_tag: json:"friend_id" form:"friend_id"
	FriendId string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"friend_id" form:"friend_id"`
}

func (x *AddBlacklistRequest) Reset() {
	*x = AddBlacklistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlacklistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlacklistRequest) ProtoMessage() {}

func (x *AddBlacklistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlacklistRequest.ProtoReflect.Descriptor instead.
func (*AddBlacklistRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{8}
}

func (x *AddBlacklistRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddBlacklistRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type AddBlacklistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddBlacklistResponse) Reset() {
	*x = AddBlacklistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlacklistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlacklistResponse) ProtoMessage() {}

func (x *AddBlacklistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlacklistResponse.ProtoReflect.Descriptor instead.
func (*AddBlacklistResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{9}
}

type DeleteBlacklistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id" form:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id" form:"user_id"`
	// @inject_tag: json:"friend_id" form:"friend_id"
	FriendId string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"friend_id" form:"friend_id"`
}

func (x *DeleteBlacklistRequest) Reset() {
	*x = DeleteBlacklistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBlacklistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBlacklistRequest) ProtoMessage() {}

func (x *DeleteBlacklistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBlacklistRequest.ProtoReflect.Descriptor instead.
func (*DeleteBlacklistRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteBlacklistRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteBlacklistRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type DeleteBlacklistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBlacklistResponse) Reset() {
	*x = DeleteBlacklistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBlacklistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBlacklistResponse) ProtoMessage() {}

func (x *DeleteBlacklistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBlacklistResponse.ProtoReflect.Descriptor instead.
func (*DeleteBlacklistResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{11}
}

type Friend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id" form:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id" form:"user_id"`
	// @inject_tag: json:"dialog_id" form:"dialog_id"
	DialogId uint32 `protobuf:"varint,2,opt,name=DialogId,proto3" json:"dialog_id" form:"dialog_id"`
	// @inject_tag: json:"remark" form:"remark"
	Remark string `protobuf:"bytes,3,opt,name=Remark,proto3" json:"remark" form:"remark"`
	// @inject_tag: json:"status" form:"status"
	Status RelationStatus `protobuf:"varint,4,opt,name=Status,proto3,enum=relation_v1.RelationStatus" json:"status" form:"status"`
	// @inject_tag: json:"open_burn_after_reading"
	OpenBurnAfterReading OpenBurnAfterReadingType `protobuf:"varint,6,opt,name=OpenBurnAfterReading,proto3,enum=relation_v1.OpenBurnAfterReadingType" json:"open_burn_after_reading"`
	// @inject_tag: json:"is_silent"
	IsSilent UserSilentNotificationType `protobuf:"varint,5,opt,name=IsSilent,proto3,enum=relation_v1.UserSilentNotificationType" json:"is_silent"`
	// @inject_tag: json:"open_burn_after_reading_time_out"
	OpenBurnAfterReadingTimeOut int64 `protobuf:"varint,8,opt,name=OpenBurnAfterReadingTimeOut,proto3" json:"open_burn_after_reading_time_out"`
}

func (x *Friend) Reset() {
	*x = Friend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friend) ProtoMessage() {}

func (x *Friend) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friend.ProtoReflect.Descriptor instead.
func (*Friend) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{12}
}

func (x *Friend) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Friend) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *Friend) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *Friend) GetStatus() RelationStatus {
	if x != nil {
		return x.Status
	}
	return RelationStatus_RELATION_STATUS_BLOCKED
}

func (x *Friend) GetOpenBurnAfterReading() OpenBurnAfterReadingType {
	if x != nil {
		return x.OpenBurnAfterReading
	}
	return OpenBurnAfterReadingType_CLOSE_BURN_AFTER_READING
}

func (x *Friend) GetIsSilent() UserSilentNotificationType {
	if x != nil {
		return x.IsSilent
	}
	return UserSilentNotificationType_UserNotSilent
}

func (x *Friend) GetOpenBurnAfterReadingTimeOut() int64 {
	if x != nil {
		return x.OpenBurnAfterReadingTimeOut
	}
	return 0
}

type GetFriendListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id" form:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id" form:"user_id"`
}

func (x *GetFriendListRequest) Reset() {
	*x = GetFriendListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendListRequest) ProtoMessage() {}

func (x *GetFriendListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendListRequest.ProtoReflect.Descriptor instead.
func (*GetFriendListRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{13}
}

func (x *GetFriendListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetFriendListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"friend_list" form:"friend_list"
	FriendList []*Friend `protobuf:"bytes,1,rep,name=FriendList,proto3" json:"friend_list" form:"friend_list"`
}

func (x *GetFriendListResponse) Reset() {
	*x = GetFriendListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendListResponse) ProtoMessage() {}

func (x *GetFriendListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendListResponse.ProtoReflect.Descriptor instead.
func (*GetFriendListResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{14}
}

func (x *GetFriendListResponse) GetFriendList() []*Friend {
	if x != nil {
		return x.FriendList
	}
	return nil
}

type Blacklist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id" form:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id" form:"user_id"`
}

func (x *Blacklist) Reset() {
	*x = Blacklist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blacklist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blacklist) ProtoMessage() {}

func (x *Blacklist) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blacklist.ProtoReflect.Descriptor instead.
func (*Blacklist) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{15}
}

func (x *Blacklist) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetBlacklistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id" form:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id" form:"user_id"`
}

func (x *GetBlacklistRequest) Reset() {
	*x = GetBlacklistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlacklistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlacklistRequest) ProtoMessage() {}

func (x *GetBlacklistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlacklistRequest.ProtoReflect.Descriptor instead.
func (*GetBlacklistRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{16}
}

func (x *GetBlacklistRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetBlacklistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"blacklist" form:"blacklist"
	Blacklist []*Blacklist `protobuf:"bytes,1,rep,name=Blacklist,proto3" json:"blacklist" form:"blacklist"`
}

func (x *GetBlacklistResponse) Reset() {
	*x = GetBlacklistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlacklistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlacklistResponse) ProtoMessage() {}

func (x *GetBlacklistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlacklistResponse.ProtoReflect.Descriptor instead.
func (*GetBlacklistResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{17}
}

func (x *GetBlacklistResponse) GetBlacklist() []*Blacklist {
	if x != nil {
		return x.Blacklist
	}
	return nil
}

type GetUserRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id"`
	// @inject_tag: json:"friend_id"
	FriendId string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"friend_id"`
}

func (x *GetUserRelationRequest) Reset() {
	*x = GetUserRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRelationRequest) ProtoMessage() {}

func (x *GetUserRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRelationRequest.ProtoReflect.Descriptor instead.
func (*GetUserRelationRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserRelationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserRelationRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type GetUserRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id"`
	// @inject_tag: json:"friend_id"
	FriendId string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"friend_id"`
	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,3,opt,name=DialogId,proto3" json:"dialog_id"`
	// @inject_tag: json:"status"
	Status RelationStatus `protobuf:"varint,4,opt,name=Status,proto3,enum=relation_v1.RelationStatus" json:"status"`
	// @inject_tag: json:"is_silent"
	IsSilent UserSilentNotificationType `protobuf:"varint,5,opt,name=IsSilent,proto3,enum=relation_v1.UserSilentNotificationType" json:"is_silent"`
	// @inject_tag: json:"open_burn_after_reading"
	OpenBurnAfterReading OpenBurnAfterReadingType `protobuf:"varint,6,opt,name=OpenBurnAfterReading,proto3,enum=relation_v1.OpenBurnAfterReadingType" json:"open_burn_after_reading"`
	// @inject_tag: json:"remark"
	Remark string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark"`
	// @inject_tag: json:"open_burn_after_reading_time_out"
	OpenBurnAfterReadingTimeOut int64 `protobuf:"varint,8,opt,name=OpenBurnAfterReadingTimeOut,proto3" json:"open_burn_after_reading_time_out"`
}

func (x *GetUserRelationResponse) Reset() {
	*x = GetUserRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRelationResponse) ProtoMessage() {}

func (x *GetUserRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRelationResponse.ProtoReflect.Descriptor instead.
func (*GetUserRelationResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserRelationResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserRelationResponse) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *GetUserRelationResponse) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *GetUserRelationResponse) GetStatus() RelationStatus {
	if x != nil {
		return x.Status
	}
	return RelationStatus_RELATION_STATUS_BLOCKED
}

func (x *GetUserRelationResponse) GetIsSilent() UserSilentNotificationType {
	if x != nil {
		return x.IsSilent
	}
	return UserSilentNotificationType_UserNotSilent
}

func (x *GetUserRelationResponse) GetOpenBurnAfterReading() OpenBurnAfterReadingType {
	if x != nil {
		return x.OpenBurnAfterReading
	}
	return OpenBurnAfterReadingType_CLOSE_BURN_AFTER_READING
}

func (x *GetUserRelationResponse) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *GetUserRelationResponse) GetOpenBurnAfterReadingTimeOut() int64 {
	if x != nil {
		return x.OpenBurnAfterReadingTimeOut
	}
	return 0
}

type GetUserRelationByUserIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id"` // 用户id
	// @inject_tag: json:"friend_ids"
	FriendIds []string `protobuf:"bytes,2,rep,name=FriendIds,proto3" json:"friend_ids"` // 好友id列表
}

func (x *GetUserRelationByUserIdsRequest) Reset() {
	*x = GetUserRelationByUserIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRelationByUserIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRelationByUserIdsRequest) ProtoMessage() {}

func (x *GetUserRelationByUserIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRelationByUserIdsRequest.ProtoReflect.Descriptor instead.
func (*GetUserRelationByUserIdsRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{20}
}

func (x *GetUserRelationByUserIdsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserRelationByUserIdsRequest) GetFriendIds() []string {
	if x != nil {
		return x.FriendIds
	}
	return nil
}

type GetUserRelationByUserIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*GetUserRelationResponse `protobuf:"bytes,1,rep,name=Users,proto3" json:"Users,omitempty"`
}

func (x *GetUserRelationByUserIdsResponse) Reset() {
	*x = GetUserRelationByUserIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRelationByUserIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRelationByUserIdsResponse) ProtoMessage() {}

func (x *GetUserRelationByUserIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRelationByUserIdsResponse.ProtoReflect.Descriptor instead.
func (*GetUserRelationByUserIdsResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{21}
}

func (x *GetUserRelationByUserIdsResponse) GetUsers() []*GetUserRelationResponse {
	if x != nil {
		return x.Users
	}
	return nil
}

type SetFriendSilentNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id"`
	// @inject_tag: json:"friend_id"
	FriendId string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"friend_id"`
	// @inject_tag: json:"is_silent"
	IsSilent UserSilentNotificationType `protobuf:"varint,3,opt,name=IsSilent,proto3,enum=relation_v1.UserSilentNotificationType" json:"is_silent"`
}

func (x *SetFriendSilentNotificationRequest) Reset() {
	*x = SetFriendSilentNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFriendSilentNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendSilentNotificationRequest) ProtoMessage() {}

func (x *SetFriendSilentNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendSilentNotificationRequest.ProtoReflect.Descriptor instead.
func (*SetFriendSilentNotificationRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{22}
}

func (x *SetFriendSilentNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetFriendSilentNotificationRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *SetFriendSilentNotificationRequest) GetIsSilent() UserSilentNotificationType {
	if x != nil {
		return x.IsSilent
	}
	return UserSilentNotificationType_UserNotSilent
}

type SetUserOpenBurnAfterReadingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id"`
	// @inject_tag: json:"friend_id"
	FriendId string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"friend_id"`
	// TimeOut 阅后即焚时间
	// @inject_tag: json:"timeout"
	TimeOut int64 `protobuf:"varint,3,opt,name=TimeOut,proto3" json:"timeout"`
	// @inject_tag: json:"open_burn_after_reading"
	OpenBurnAfterReading OpenBurnAfterReadingType `protobuf:"varint,4,opt,name=OpenBurnAfterReading,proto3,enum=relation_v1.OpenBurnAfterReadingType" json:"open_burn_after_reading"`
}

func (x *SetUserOpenBurnAfterReadingRequest) Reset() {
	*x = SetUserOpenBurnAfterReadingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserOpenBurnAfterReadingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserOpenBurnAfterReadingRequest) ProtoMessage() {}

func (x *SetUserOpenBurnAfterReadingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserOpenBurnAfterReadingRequest.ProtoReflect.Descriptor instead.
func (*SetUserOpenBurnAfterReadingRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{23}
}

func (x *SetUserOpenBurnAfterReadingRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetUserOpenBurnAfterReadingRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *SetUserOpenBurnAfterReadingRequest) GetTimeOut() int64 {
	if x != nil {
		return x.TimeOut
	}
	return 0
}

func (x *SetUserOpenBurnAfterReadingRequest) GetOpenBurnAfterReading() OpenBurnAfterReadingType {
	if x != nil {
		return x.OpenBurnAfterReading
	}
	return OpenBurnAfterReadingType_CLOSE_BURN_AFTER_READING
}

type SetFriendRemarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"user_id"`
	// @inject_tag: json:"friend_id"
	FriendId string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"friend_id"`
	// @inject_tag: json:"remark"
	Remark string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark"`
}

func (x *SetFriendRemarkRequest) Reset() {
	*x = SetFriendRemarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_relation_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFriendRemarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendRemarkRequest) ProtoMessage() {}

func (x *SetFriendRemarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_relation_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendRemarkRequest.ProtoReflect.Descriptor instead.
func (*SetFriendRemarkRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_relation_proto_rawDescGZIP(), []int{24}
}

func (x *SetFriendRemarkRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetFriendRemarkRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *SetFriendRemarkRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

var File_api_grpc_v1_user_relation_proto protoreflect.FileDescriptor

var file_api_grpc_v1_user_relation_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a,
	0x1b, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x22, 0x1e, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x46, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9a, 0x01,
	0x0a, 0x13, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x49, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x16, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x22, 0x16, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xeb, 0x02, 0x0a, 0x06, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x59, 0x0a,
	0x14, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75, 0x72, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75,
	0x72, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x14, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75, 0x72, 0x6e, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x08, 0x49, 0x73, 0x53, 0x69,
	0x6c, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6c,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x49, 0x73, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a,
	0x1b, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75, 0x72, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x1b, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75, 0x72, 0x6e, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x22,
	0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x4c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x23, 0x0a,
	0x09, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x2d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x4c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x4c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x98, 0x03,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43,
	0x0a, 0x08, 0x49, 0x73, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x49, 0x73, 0x53, 0x69, 0x6c,
	0x65, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75, 0x72, 0x6e, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75, 0x72, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75,
	0x72, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x40, 0x0a, 0x1b, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75,
	0x72, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1b, 0x4f, 0x70, 0x65,
	0x6e, 0x42, 0x75, 0x72, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x22, 0x57, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x73, 0x22, 0x5e, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x22, 0x9d, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53,
	0x69, 0x6c, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x08,
	0x49, 0x73, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x49, 0x73, 0x53, 0x69, 0x6c, 0x65, 0x6e,
	0x74, 0x22, 0xcd, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x65,
	0x6e, 0x42, 0x75, 0x72, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x54,
	0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75,
	0x72, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75, 0x72, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x4f, 0x70, 0x65,
	0x6e, 0x42, 0x75, 0x72, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x22, 0x64, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x2a, 0x5f, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x4c,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x4c, 0x4f,
	0x43, 0x4b, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x52,
	0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x3f, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x32, 0x85, 0x0b, 0x0a, 0x13, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4a, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1d,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x0c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x0c, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x56, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x2c, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6c, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x66, 0x0a, 0x1b,
	0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75, 0x72, 0x6e, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75, 0x72, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x23, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x6b, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x73, 0x69, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_grpc_v1_user_relation_proto_rawDescOnce sync.Once
	file_api_grpc_v1_user_relation_proto_rawDescData = file_api_grpc_v1_user_relation_proto_rawDesc
)

func file_api_grpc_v1_user_relation_proto_rawDescGZIP() []byte {
	file_api_grpc_v1_user_relation_proto_rawDescOnce.Do(func() {
		file_api_grpc_v1_user_relation_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_grpc_v1_user_relation_proto_rawDescData)
	})
	return file_api_grpc_v1_user_relation_proto_rawDescData
}

var file_api_grpc_v1_user_relation_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_grpc_v1_user_relation_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_api_grpc_v1_user_relation_proto_goTypes = []interface{}{
	(RelationStatus)(0),                        // 0: relation_v1.RelationStatus
	(UserSilentNotificationType)(0),            // 1: relation_v1.UserSilentNotificationType
	(*AddFriendAfterDeleteRequest)(nil),        // 2: relation_v1.AddFriendAfterDeleteRequest
	(*AddFriendAfterDeleteResponse)(nil),       // 3: relation_v1.AddFriendAfterDeleteResponse
	(*AddFriendRequest)(nil),                   // 4: relation_v1.AddFriendRequest
	(*AddFriendResponse)(nil),                  // 5: relation_v1.AddFriendResponse
	(*ManageFriendRequest)(nil),                // 6: relation_v1.ManageFriendRequest
	(*ManageFriendResponse)(nil),               // 7: relation_v1.ManageFriendResponse
	(*DeleteFriendRequest)(nil),                // 8: relation_v1.DeleteFriendRequest
	(*DeleteFriendResponse)(nil),               // 9: relation_v1.DeleteFriendResponse
	(*AddBlacklistRequest)(nil),                // 10: relation_v1.AddBlacklistRequest
	(*AddBlacklistResponse)(nil),               // 11: relation_v1.AddBlacklistResponse
	(*DeleteBlacklistRequest)(nil),             // 12: relation_v1.DeleteBlacklistRequest
	(*DeleteBlacklistResponse)(nil),            // 13: relation_v1.DeleteBlacklistResponse
	(*Friend)(nil),                             // 14: relation_v1.Friend
	(*GetFriendListRequest)(nil),               // 15: relation_v1.GetFriendListRequest
	(*GetFriendListResponse)(nil),              // 16: relation_v1.GetFriendListResponse
	(*Blacklist)(nil),                          // 17: relation_v1.Blacklist
	(*GetBlacklistRequest)(nil),                // 18: relation_v1.GetBlacklistRequest
	(*GetBlacklistResponse)(nil),               // 19: relation_v1.GetBlacklistResponse
	(*GetUserRelationRequest)(nil),             // 20: relation_v1.GetUserRelationRequest
	(*GetUserRelationResponse)(nil),            // 21: relation_v1.GetUserRelationResponse
	(*GetUserRelationByUserIdsRequest)(nil),    // 22: relation_v1.GetUserRelationByUserIdsRequest
	(*GetUserRelationByUserIdsResponse)(nil),   // 23: relation_v1.GetUserRelationByUserIdsResponse
	(*SetFriendSilentNotificationRequest)(nil), // 24: relation_v1.SetFriendSilentNotificationRequest
	(*SetUserOpenBurnAfterReadingRequest)(nil), // 25: relation_v1.SetUserOpenBurnAfterReadingRequest
	(*SetFriendRemarkRequest)(nil),             // 26: relation_v1.SetFriendRemarkRequest
	(OpenBurnAfterReadingType)(0),              // 27: relation_v1.OpenBurnAfterReadingType
	(*emptypb.Empty)(nil),                      // 28: google.protobuf.Empty
}
var file_api_grpc_v1_user_relation_proto_depIdxs = []int32{
	0,  // 0: relation_v1.ManageFriendRequest.Status:type_name -> relation_v1.RelationStatus
	0,  // 1: relation_v1.Friend.Status:type_name -> relation_v1.RelationStatus
	27, // 2: relation_v1.Friend.OpenBurnAfterReading:type_name -> relation_v1.OpenBurnAfterReadingType
	1,  // 3: relation_v1.Friend.IsSilent:type_name -> relation_v1.UserSilentNotificationType
	14, // 4: relation_v1.GetFriendListResponse.FriendList:type_name -> relation_v1.Friend
	17, // 5: relation_v1.GetBlacklistResponse.Blacklist:type_name -> relation_v1.Blacklist
	0,  // 6: relation_v1.GetUserRelationResponse.Status:type_name -> relation_v1.RelationStatus
	1,  // 7: relation_v1.GetUserRelationResponse.IsSilent:type_name -> relation_v1.UserSilentNotificationType
	27, // 8: relation_v1.GetUserRelationResponse.OpenBurnAfterReading:type_name -> relation_v1.OpenBurnAfterReadingType
	21, // 9: relation_v1.GetUserRelationByUserIdsResponse.Users:type_name -> relation_v1.GetUserRelationResponse
	1,  // 10: relation_v1.SetFriendSilentNotificationRequest.IsSilent:type_name -> relation_v1.UserSilentNotificationType
	27, // 11: relation_v1.SetUserOpenBurnAfterReadingRequest.OpenBurnAfterReading:type_name -> relation_v1.OpenBurnAfterReadingType
	4,  // 12: relation_v1.UserRelationService.AddFriend:input_type -> relation_v1.AddFriendRequest
	6,  // 13: relation_v1.UserRelationService.ManageFriend:input_type -> relation_v1.ManageFriendRequest
	6,  // 14: relation_v1.UserRelationService.ManageFriendRevert:input_type -> relation_v1.ManageFriendRequest
	8,  // 15: relation_v1.UserRelationService.DeleteFriend:input_type -> relation_v1.DeleteFriendRequest
	8,  // 16: relation_v1.UserRelationService.DeleteFriendRevert:input_type -> relation_v1.DeleteFriendRequest
	10, // 17: relation_v1.UserRelationService.AddBlacklist:input_type -> relation_v1.AddBlacklistRequest
	12, // 18: relation_v1.UserRelationService.DeleteBlacklist:input_type -> relation_v1.DeleteBlacklistRequest
	15, // 19: relation_v1.UserRelationService.GetFriendList:input_type -> relation_v1.GetFriendListRequest
	18, // 20: relation_v1.UserRelationService.GetBlacklist:input_type -> relation_v1.GetBlacklistRequest
	20, // 21: relation_v1.UserRelationService.GetUserRelation:input_type -> relation_v1.GetUserRelationRequest
	22, // 22: relation_v1.UserRelationService.GetUserRelationByUserIds:input_type -> relation_v1.GetUserRelationByUserIdsRequest
	24, // 23: relation_v1.UserRelationService.SetFriendSilentNotification:input_type -> relation_v1.SetFriendSilentNotificationRequest
	25, // 24: relation_v1.UserRelationService.SetUserOpenBurnAfterReading:input_type -> relation_v1.SetUserOpenBurnAfterReadingRequest
	26, // 25: relation_v1.UserRelationService.SetFriendRemark:input_type -> relation_v1.SetFriendRemarkRequest
	2,  // 26: relation_v1.UserRelationService.AddFriendAfterDelete:input_type -> relation_v1.AddFriendAfterDeleteRequest
	5,  // 27: relation_v1.UserRelationService.AddFriend:output_type -> relation_v1.AddFriendResponse
	7,  // 28: relation_v1.UserRelationService.ManageFriend:output_type -> relation_v1.ManageFriendResponse
	7,  // 29: relation_v1.UserRelationService.ManageFriendRevert:output_type -> relation_v1.ManageFriendResponse
	9,  // 30: relation_v1.UserRelationService.DeleteFriend:output_type -> relation_v1.DeleteFriendResponse
	9,  // 31: relation_v1.UserRelationService.DeleteFriendRevert:output_type -> relation_v1.DeleteFriendResponse
	11, // 32: relation_v1.UserRelationService.AddBlacklist:output_type -> relation_v1.AddBlacklistResponse
	13, // 33: relation_v1.UserRelationService.DeleteBlacklist:output_type -> relation_v1.DeleteBlacklistResponse
	16, // 34: relation_v1.UserRelationService.GetFriendList:output_type -> relation_v1.GetFriendListResponse
	19, // 35: relation_v1.UserRelationService.GetBlacklist:output_type -> relation_v1.GetBlacklistResponse
	21, // 36: relation_v1.UserRelationService.GetUserRelation:output_type -> relation_v1.GetUserRelationResponse
	23, // 37: relation_v1.UserRelationService.GetUserRelationByUserIds:output_type -> relation_v1.GetUserRelationByUserIdsResponse
	28, // 38: relation_v1.UserRelationService.SetFriendSilentNotification:output_type -> google.protobuf.Empty
	28, // 39: relation_v1.UserRelationService.SetUserOpenBurnAfterReading:output_type -> google.protobuf.Empty
	28, // 40: relation_v1.UserRelationService.SetFriendRemark:output_type -> google.protobuf.Empty
	3,  // 41: relation_v1.UserRelationService.AddFriendAfterDelete:output_type -> relation_v1.AddFriendAfterDeleteResponse
	27, // [27:42] is the sub-list for method output_type
	12, // [12:27] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_grpc_v1_user_relation_proto_init() }
func file_api_grpc_v1_user_relation_proto_init() {
	if File_api_grpc_v1_user_relation_proto != nil {
		return
	}
	file_api_grpc_v1_group_relation_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_grpc_v1_user_relation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendAfterDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendAfterDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlacklistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlacklistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBlacklistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBlacklistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Friend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blacklist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlacklistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlacklistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRelationByUserIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRelationByUserIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFriendSilentNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserOpenBurnAfterReadingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_relation_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFriendRemarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_grpc_v1_user_relation_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_grpc_v1_user_relation_proto_goTypes,
		DependencyIndexes: file_api_grpc_v1_user_relation_proto_depIdxs,
		EnumInfos:         file_api_grpc_v1_user_relation_proto_enumTypes,
		MessageInfos:      file_api_grpc_v1_user_relation_proto_msgTypes,
	}.Build()
	File_api_grpc_v1_user_relation_proto = out.File
	file_api_grpc_v1_user_relation_proto_rawDesc = nil
	file_api_grpc_v1_user_relation_proto_goTypes = nil
	file_api_grpc_v1_user_relation_proto_depIdxs = nil
}
