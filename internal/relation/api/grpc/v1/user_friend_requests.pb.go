// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: api/grpc/v1/user_friend_requests.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FriendRequestStatus int32

const (
	// 申请中
	FriendRequestStatus_FriendRequestStatus_PENDING FriendRequestStatus = 0
	// 已同意
	FriendRequestStatus_FriendRequestStatus_ACCEPT FriendRequestStatus = 1
	// 已拒绝
	FriendRequestStatus_FriendRequestStatus_REJECT FriendRequestStatus = 2
)

// Enum value maps for FriendRequestStatus.
var (
	FriendRequestStatus_name = map[int32]string{
		0: "FriendRequestStatus_PENDING",
		1: "FriendRequestStatus_ACCEPT",
		2: "FriendRequestStatus_REJECT",
	}
	FriendRequestStatus_value = map[string]int32{
		"FriendRequestStatus_PENDING": 0,
		"FriendRequestStatus_ACCEPT":  1,
		"FriendRequestStatus_REJECT":  2,
	}
)

func (x FriendRequestStatus) Enum() *FriendRequestStatus {
	p := new(FriendRequestStatus)
	*p = x
	return p
}

func (x FriendRequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendRequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_grpc_v1_user_friend_requests_proto_enumTypes[0].Descriptor()
}

func (FriendRequestStatus) Type() protoreflect.EnumType {
	return &file_api_grpc_v1_user_friend_requests_proto_enumTypes[0]
}

func (x FriendRequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendRequestStatus.Descriptor instead.
func (FriendRequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_friend_requests_proto_rawDescGZIP(), []int{0}
}

type GetFriendRequestListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"user_id"`
	// @inject_tag: json:"page_size"
	PageSize uint32 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"page_size"`
	// @inject_tag: json:"page_num"
	PageNum uint32 `protobuf:"varint,3,opt,name=CurrentPage,proto3" json:"page_num"`
}

func (x *GetFriendRequestListRequest) Reset() {
	*x = GetFriendRequestListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestListRequest) ProtoMessage() {}

func (x *GetFriendRequestListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestListRequest.ProtoReflect.Descriptor instead.
func (*GetFriendRequestListRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_friend_requests_proto_rawDescGZIP(), []int{0}
}

func (x *GetFriendRequestListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetFriendRequestListRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetFriendRequestListRequest) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type GetFriendRequestListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"friend_request_list"
	FriendRequestList []*FriendRequestList `protobuf:"bytes,1,rep,name=FriendRequestList,proto3" json:"friend_request_list"`
	// @inject_tag: json:"total"
	Total uint64 `protobuf:"varint,2,opt,name=Total,proto3" json:"total"`
}

func (x *GetFriendRequestListResponse) Reset() {
	*x = GetFriendRequestListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestListResponse) ProtoMessage() {}

func (x *GetFriendRequestListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestListResponse.ProtoReflect.Descriptor instead.
func (*GetFriendRequestListResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_friend_requests_proto_rawDescGZIP(), []int{1}
}

func (x *GetFriendRequestListResponse) GetFriendRequestList() []*FriendRequestList {
	if x != nil {
		return x.FriendRequestList
	}
	return nil
}

func (x *GetFriendRequestListResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FriendRequestList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"id"`
	// SenderId 发送方id
	// @inject_tag: json:"sender_id"
	SenderId string `protobuf:"bytes,2,opt,name=SenderId,proto3" json:"sender_id"`
	// ReceiverId 接收方id
	// @inject_tag: json:"receiver_id"
	ReceiverId string `protobuf:"bytes,3,opt,name=ReceiverId,proto3" json:"receiver_id"`
	// @inject_tag: json:"status"
	Status FriendRequestStatus `protobuf:"varint,4,opt,name=Status,proto3,enum=relation_v1.FriendRequestStatus" json:"status"`
	// Remark 请求备注
	// @inject_tag: json:"remark"
	Remark string `protobuf:"bytes,5,opt,name=Remark,proto3" json:"remark"`
	// OwnerID 所有者id
	// @inject_tag: json:"owner_id"
	OwnerID string `protobuf:"bytes,6,opt,name=OwnerID,proto3" json:"owner_id"`
	// @inject_tag: json:"create_at"
	CreateAt uint64 `protobuf:"varint,7,opt,name=CreateAt,proto3" json:"create_at"`
	// @inject_tag: json:"expired_at"
	ExpiredAt uint64 `protobuf:"varint,8,opt,name=ExpiredAt,proto3" json:"expired_at"`
}

func (x *FriendRequestList) Reset() {
	*x = FriendRequestList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendRequestList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequestList) ProtoMessage() {}

func (x *FriendRequestList) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequestList.ProtoReflect.Descriptor instead.
func (*FriendRequestList) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_friend_requests_proto_rawDescGZIP(), []int{2}
}

func (x *FriendRequestList) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *FriendRequestList) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *FriendRequestList) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *FriendRequestList) GetStatus() FriendRequestStatus {
	if x != nil {
		return x.Status
	}
	return FriendRequestStatus_FriendRequestStatus_PENDING
}

func (x *FriendRequestList) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *FriendRequestList) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *FriendRequestList) GetCreateAt() uint64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *FriendRequestList) GetExpiredAt() uint64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

type SendFriendRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SenderId 发送请求方id
	// @inject_tag: json:"sender_id"
	SenderId string `protobuf:"bytes,1,opt,name=SenderId,proto3" json:"sender_id"`
	// ReceiverId 接收请求方id
	// @inject_tag: json:"receiver_id"
	ReceiverId string `protobuf:"bytes,2,opt,name=ReceiverId,proto3" json:"receiver_id"`
	// Remark 申请信息
	// @inject_tag: json:"remark"
	Remark string `protobuf:"bytes,3,opt,name=Remark,proto3" json:"remark"`
}

func (x *SendFriendRequestStruct) Reset() {
	*x = SendFriendRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFriendRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendRequestStruct) ProtoMessage() {}

func (x *SendFriendRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendRequestStruct.ProtoReflect.Descriptor instead.
func (*SendFriendRequestStruct) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_friend_requests_proto_rawDescGZIP(), []int{3}
}

func (x *SendFriendRequestStruct) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *SendFriendRequestStruct) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *SendFriendRequestStruct) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type ManageFriendRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"id"`
	// @inject_tag: json:"status"
	Status FriendRequestStatus `protobuf:"varint,3,opt,name=Status,proto3,enum=relation_v1.FriendRequestStatus" json:"status"`
}

func (x *ManageFriendRequestStruct) Reset() {
	*x = ManageFriendRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageFriendRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageFriendRequestStruct) ProtoMessage() {}

func (x *ManageFriendRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageFriendRequestStruct.ProtoReflect.Descriptor instead.
func (*ManageFriendRequestStruct) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_friend_requests_proto_rawDescGZIP(), []int{4}
}

func (x *ManageFriendRequestStruct) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ManageFriendRequestStruct) GetStatus() FriendRequestStatus {
	if x != nil {
		return x.Status
	}
	return FriendRequestStatus_FriendRequestStatus_PENDING
}

type GetFriendRequestByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"id"`
}

func (x *GetFriendRequestByIdRequest) Reset() {
	*x = GetFriendRequestByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestByIdRequest) ProtoMessage() {}

func (x *GetFriendRequestByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestByIdRequest.ProtoReflect.Descriptor instead.
func (*GetFriendRequestByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_friend_requests_proto_rawDescGZIP(), []int{5}
}

func (x *GetFriendRequestByIdRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetFriendRequestByUserIdAndFriendIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"user_id"`
	// @inject_tag: json:"friend_id"
	FriendId string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"friend_id"`
}

func (x *GetFriendRequestByUserIdAndFriendIdRequest) Reset() {
	*x = GetFriendRequestByUserIdAndFriendIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestByUserIdAndFriendIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestByUserIdAndFriendIdRequest) ProtoMessage() {}

func (x *GetFriendRequestByUserIdAndFriendIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestByUserIdAndFriendIdRequest.ProtoReflect.Descriptor instead.
func (*GetFriendRequestByUserIdAndFriendIdRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_friend_requests_proto_rawDescGZIP(), []int{6}
}

func (x *GetFriendRequestByUserIdAndFriendIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetFriendRequestByUserIdAndFriendIdRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type SendFriendRequestStructResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"id"`
}

func (x *SendFriendRequestStructResponse) Reset() {
	*x = SendFriendRequestStructResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFriendRequestStructResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendRequestStructResponse) ProtoMessage() {}

func (x *SendFriendRequestStructResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendRequestStructResponse.ProtoReflect.Descriptor instead.
func (*SendFriendRequestStructResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_friend_requests_proto_rawDescGZIP(), []int{7}
}

func (x *SendFriendRequestStructResponse) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DeleteFriendRequestByUserIdAndFriendIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"user_id"`
	// @inject_tag: json:"friend_id"
	FriendId string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"friend_id"`
}

func (x *DeleteFriendRequestByUserIdAndFriendIdRequest) Reset() {
	*x = DeleteFriendRequestByUserIdAndFriendIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendRequestByUserIdAndFriendIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRequestByUserIdAndFriendIdRequest) ProtoMessage() {}

func (x *DeleteFriendRequestByUserIdAndFriendIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRequestByUserIdAndFriendIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteFriendRequestByUserIdAndFriendIdRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_friend_requests_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteFriendRequestByUserIdAndFriendIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteFriendRequestByUserIdAndFriendIdRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type DeleteFriendRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"id"`
	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"user_id"`
}

func (x *DeleteFriendRecordRequest) Reset() {
	*x = DeleteFriendRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRecordRequest) ProtoMessage() {}

func (x *DeleteFriendRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_user_friend_requests_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRecordRequest.ProtoReflect.Descriptor instead.
func (*DeleteFriendRecordRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_user_friend_requests_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteFriendRecordRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DeleteFriendRecordRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_api_grpc_v1_user_friend_requests_proto protoreflect.FileDescriptor

var file_api_grpc_v1_user_friend_requests_proto_rawDesc = []byte{
	0x0a, 0x26, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22,
	0x82, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x85, 0x02, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6d, 0x0a, 0x17,
	0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x65, 0x0a, 0x19, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x60, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x1f, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x63, 0x0a, 0x2d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x19, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x2a, 0x76, 0x0a, 0x13, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x02, 0x32, 0xfd, 0x05, 0x0a, 0x18, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x67, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2c, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x13, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x60, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x28, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x7e, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x41, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x37, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x7c, 0x0a, 0x26, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x3a,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x54, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x73, 0x69, 0x6d, 0x2f, 0x63, 0x6f,
	0x73, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_grpc_v1_user_friend_requests_proto_rawDescOnce sync.Once
	file_api_grpc_v1_user_friend_requests_proto_rawDescData = file_api_grpc_v1_user_friend_requests_proto_rawDesc
)

func file_api_grpc_v1_user_friend_requests_proto_rawDescGZIP() []byte {
	file_api_grpc_v1_user_friend_requests_proto_rawDescOnce.Do(func() {
		file_api_grpc_v1_user_friend_requests_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_grpc_v1_user_friend_requests_proto_rawDescData)
	})
	return file_api_grpc_v1_user_friend_requests_proto_rawDescData
}

var file_api_grpc_v1_user_friend_requests_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_grpc_v1_user_friend_requests_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_grpc_v1_user_friend_requests_proto_goTypes = []interface{}{
	(FriendRequestStatus)(0),                              // 0: relation_v1.FriendRequestStatus
	(*GetFriendRequestListRequest)(nil),                   // 1: relation_v1.GetFriendRequestListRequest
	(*GetFriendRequestListResponse)(nil),                  // 2: relation_v1.GetFriendRequestListResponse
	(*FriendRequestList)(nil),                             // 3: relation_v1.FriendRequestList
	(*SendFriendRequestStruct)(nil),                       // 4: relation_v1.SendFriendRequestStruct
	(*ManageFriendRequestStruct)(nil),                     // 5: relation_v1.ManageFriendRequestStruct
	(*GetFriendRequestByIdRequest)(nil),                   // 6: relation_v1.GetFriendRequestByIdRequest
	(*GetFriendRequestByUserIdAndFriendIdRequest)(nil),    // 7: relation_v1.GetFriendRequestByUserIdAndFriendIdRequest
	(*SendFriendRequestStructResponse)(nil),               // 8: relation_v1.SendFriendRequestStructResponse
	(*DeleteFriendRequestByUserIdAndFriendIdRequest)(nil), // 9: relation_v1.DeleteFriendRequestByUserIdAndFriendIdRequest
	(*DeleteFriendRecordRequest)(nil),                     // 10: relation_v1.DeleteFriendRecordRequest
	(*emptypb.Empty)(nil),                                 // 11: google.protobuf.Empty
}
var file_api_grpc_v1_user_friend_requests_proto_depIdxs = []int32{
	3,  // 0: relation_v1.GetFriendRequestListResponse.FriendRequestList:type_name -> relation_v1.FriendRequestList
	0,  // 1: relation_v1.FriendRequestList.Status:type_name -> relation_v1.FriendRequestStatus
	0,  // 2: relation_v1.ManageFriendRequestStruct.Status:type_name -> relation_v1.FriendRequestStatus
	1,  // 3: relation_v1.UserFriendRequestService.GetFriendRequestList:input_type -> relation_v1.GetFriendRequestListRequest
	4,  // 4: relation_v1.UserFriendRequestService.SendFriendRequest:input_type -> relation_v1.SendFriendRequestStruct
	5,  // 5: relation_v1.UserFriendRequestService.ManageFriendRequest:input_type -> relation_v1.ManageFriendRequestStruct
	6,  // 6: relation_v1.UserFriendRequestService.GetFriendRequestById:input_type -> relation_v1.GetFriendRequestByIdRequest
	7,  // 7: relation_v1.UserFriendRequestService.GetFriendRequestByUserIdAndFriendId:input_type -> relation_v1.GetFriendRequestByUserIdAndFriendIdRequest
	9,  // 8: relation_v1.UserFriendRequestService.DeleteFriendRequestByUserIdAndFriendId:input_type -> relation_v1.DeleteFriendRequestByUserIdAndFriendIdRequest
	10, // 9: relation_v1.UserFriendRequestService.DeleteFriendRecord:input_type -> relation_v1.DeleteFriendRecordRequest
	2,  // 10: relation_v1.UserFriendRequestService.GetFriendRequestList:output_type -> relation_v1.GetFriendRequestListResponse
	8,  // 11: relation_v1.UserFriendRequestService.SendFriendRequest:output_type -> relation_v1.SendFriendRequestStructResponse
	11, // 12: relation_v1.UserFriendRequestService.ManageFriendRequest:output_type -> google.protobuf.Empty
	3,  // 13: relation_v1.UserFriendRequestService.GetFriendRequestById:output_type -> relation_v1.FriendRequestList
	3,  // 14: relation_v1.UserFriendRequestService.GetFriendRequestByUserIdAndFriendId:output_type -> relation_v1.FriendRequestList
	11, // 15: relation_v1.UserFriendRequestService.DeleteFriendRequestByUserIdAndFriendId:output_type -> google.protobuf.Empty
	11, // 16: relation_v1.UserFriendRequestService.DeleteFriendRecord:output_type -> google.protobuf.Empty
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_grpc_v1_user_friend_requests_proto_init() }
func file_api_grpc_v1_user_friend_requests_proto_init() {
	if File_api_grpc_v1_user_friend_requests_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_grpc_v1_user_friend_requests_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_friend_requests_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_friend_requests_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendRequestList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_friend_requests_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFriendRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_friend_requests_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageFriendRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_friend_requests_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_friend_requests_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestByUserIdAndFriendIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_friend_requests_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFriendRequestStructResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_friend_requests_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendRequestByUserIdAndFriendIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_user_friend_requests_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_grpc_v1_user_friend_requests_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_grpc_v1_user_friend_requests_proto_goTypes,
		DependencyIndexes: file_api_grpc_v1_user_friend_requests_proto_depIdxs,
		EnumInfos:         file_api_grpc_v1_user_friend_requests_proto_enumTypes,
		MessageInfos:      file_api_grpc_v1_user_friend_requests_proto_msgTypes,
	}.Build()
	File_api_grpc_v1_user_friend_requests_proto = out.File
	file_api_grpc_v1_user_friend_requests_proto_rawDesc = nil
	file_api_grpc_v1_user_friend_requests_proto_goTypes = nil
	file_api_grpc_v1_user_friend_requests_proto_depIdxs = nil
}
