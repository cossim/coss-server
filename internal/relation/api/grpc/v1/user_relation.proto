syntax = "proto3";
package relation_v1;
option go_package = "github.com/cossim/coss-server/internal/relation/api/grpc/v1";

service UserRelationService {
  // 添加好友
  rpc AddFriend(AddFriendRequest) returns (AddFriendResponse);
  // 获取好友列表
  rpc GetFriendList(GetFriendListRequest) returns (GetFriendListResponse);
  // 获取用户关系
  rpc GetUserRelation(GetUserRelationRequest) returns (GetUserRelationResponse);
  // 批量获取用户关系
  rpc GetRelationsWithUsers(GetUserRelationByUserIdsRequest) returns (GetUserRelationByUserIdsResponse);
}

message AddFriendRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;    // 用户id
  // @inject_tag: json:"friend_id"
  string FriendId = 2;  // 好友id

}

message AddFriendResponse {
  // Add any necessary fields here for the response
}

message Friend {
  // @inject_tag: json:"user_id" form:"user_id"
  string UserId = 1;
  // @inject_tag: json:"dialog_id" form:"dialog_id"
  uint32 DialogId = 2;
  // @inject_tag: json:"remark" form:"remark"
  string Remark = 3;
  // @inject_tag: json:"status" form:"status"
  RelationStatus Status = 4;
  // @inject_tag: json:"open_burn_after_reading"
  bool OpenBurnAfterReading = 6;
  // @inject_tag: json:"is_silent"
  bool IsSilent = 5;
  //  @inject_tag: json:"open_burn_after_reading_time_out"
  int64 OpenBurnAfterReadingTimeOut = 8;

}

message GetFriendListRequest {
  // @inject_tag: json:"user_id" form:"user_id"
  string UserId = 1;
}

message GetFriendListResponse {
  // @inject_tag: json:"friend_list" form:"friend_list"
  repeated Friend FriendList = 1;
}

message GetUserRelationRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"friend_id"
  string FriendId = 2;
}

enum RelationStatus {
  RELATION_UNKNOWN = 0;           // 陌生人
  RELATION_NORMAL = 1;            // 正常
  RELATION_STATUS_BLOCKED = 2;    // 已拉黑
  RELATION_STATUS_DELETED = 3;    // 已删除
}

message GetUserRelationResponse {
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"friend_id"
  string FriendId = 2;
  //  @inject_tag: json:"dialog_id"
  uint32 DialogId = 3;
  // @inject_tag: json:"status"
  RelationStatus Status = 4;
  // @inject_tag: json:"is_silent"
  bool IsSilent = 5;
  // @inject_tag: json:"open_burn_after_reading"
  bool OpenBurnAfterReading = 6;
  // @inject_tag: json:"remark"
  string remark = 7;
  //  @inject_tag: json:"open_burn_after_reading_time_out"
  int64 OpenBurnAfterReadingTimeOut = 8;
}

message GetUserRelationByUserIdsRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;    // 用户id
  // @inject_tag: json:"friend_ids"
  repeated string FriendIds = 2; // 好友id列表
}

message GetUserRelationByUserIdsResponse {
  repeated GetUserRelationResponse Users = 1;
}
