syntax = "proto3";
package relation_v1;
option go_package = "github.com/cossim/coss-server/internal/relation/api/grpc/v1";
import "google/protobuf/empty.proto";

service DialogService {
  // 获取用户对话列表
  rpc GetUserDialogList(GetUserDialogListRequest) returns (GetUserDialogListResponse) {}

  // 根据多个对话ID获取对话信息
  rpc GetDialogByIds(GetDialogByIdsRequest) returns (GetDialogByIdsResponse) {}
  // 根据对话id获取对话信息
  rpc GetDialogById(GetDialogByIdRequest) returns (Dialog) {}

  // 根据对话ID获取对话成员列表
  rpc GetDialogUsersByDialogID(GetDialogUsersByDialogIDRequest) returns (GetDialogUsersByDialogIDResponse) {}

  // 根据对话ID和用户ID获取对话成员信息
  rpc GetDialogUserByDialogIDAndUserID(GetDialogUserByDialogIDAndUserIdRequest) returns (GetDialogUserByDialogIDAndUserIdResponse) {}

  // 根据群组ID获取对话信息
  rpc GetDialogByGroupId(GetDialogByGroupIdRequest) returns (GetDialogByGroupIdResponse) {}

  // 根据对话ID删除对话
  rpc DeleteDialogById(DeleteDialogByIdRequest) returns (DeleteDialogByIdResponse) {}

  // DeleteDialogById回滚操作
  rpc DeleteDialogByIdRevert(DeleteDialogByIdRequest) returns (DeleteDialogByIdResponse) {}

  // 根据对话ID删除对话成员
  rpc DeleteDialogUsersByDialogID(DeleteDialogUsersByDialogIDRequest) returns (DeleteDialogUsersByDialogIDResponse) {}

  // DeleteDialogUsersByDialogID回滚操作
  rpc DeleteDialogUsersByDialogIDRevert(DeleteDialogUsersByDialogIDRequest) returns (DeleteDialogUsersByDialogIDResponse) {}

  //关闭或者打开对话
  rpc CloseOrOpenDialog(CloseOrOpenDialogRequest) returns (google.protobuf.Empty) {}

  //批量打开或关闭对话
  rpc BatchCloseOrOpenDialog(BatchCloseOrOpenDialogRequest) returns (google.protobuf.Empty) {}

  //获取对话用户（包括已退出对话）
  rpc GetAllUsersInConversation(GetAllUsersInConversationRequest) returns (GetAllUsersInConversationResponse) {}
}

message GetUserDialogListRequest {
  //  @inject_tag: json:"user_id"
  string UserId = 1;
  //  @inject_tag: json:"page_size"
  uint32 PageSize = 2;
  //  @inject_tag: json:"page_num"
  uint32 PageNum = 3;
}

message GetUserDialogListResponse {
  //  @inject_tag: json:"dialog_ids"
  repeated uint32 DialogIds = 1;
  //  @inject_tag: json:"total"
  uint64 Total = 2;
}

message GetDialogByIdsRequest {
  //  @inject_tag: json:"dialog_ids"
  repeated uint32 DialogIds = 1;
}
message GetDialogByIdsResponse {
  //  @inject_tag: json:"dialogs"
  repeated Dialog Dialogs = 1;
}

message Dialog {
  //  @inject_tag: json:"id"
  uint32 Id = 1;
  //  @inject_tag: json:"owner_id"
  string OwnerId = 2;
  //  @inject_tag: json:"type"
  uint32 Type = 3;
  //  @inject_tag: json:"group_id"
  uint32 GroupId = 4;
  //  @inject_tag: json:"create_at"
  int64 CreateAt = 5;
}


message GetDialogUsersByDialogIDRequest {
  //  @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
}
message GetDialogUsersByDialogIDResponse {
  //  @inject_tag: json:"user_ids"
  repeated string UserIds = 1;
}

message DeleteDialogByIdRequest {
  //  @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
}
message DeleteDialogByIdResponse {}


message DeleteDialogUsersByDialogIDRequest {
  //  @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
}
message DeleteDialogUsersByDialogIDResponse {}

message GetDialogUserByDialogIDAndUserIdRequest {
  //  @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  //  @inject_tag: json:"user_id"
  string UserId = 2;
}
message GetDialogUserByDialogIDAndUserIdResponse {
  //  @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  //  @inject_tag: json:"user_id"
  string UserId = 2;
  //  @inject_tag: json:"is_show"
  uint32 IsShow = 3;
  //  @inject_tag: json:"top_at"
  uint64 TopAt = 4;
}

message GetDialogByGroupIdRequest {
  //  @inject_tag: json:"group_id"
  uint32 GroupId = 1;
}

message GetDialogByGroupIdResponse {
  //  @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  //  @inject_tag: json:"group_id"
  uint32 GroupId = 2;
  //  @inject_tag: json:"type"
  uint32 Type = 3;
  //  @inject_tag: json:"is_show"
  uint32 IsShow = 4;
  //  @inject_tag: json:"top_at"
  uint64 TopAt = 5;
  //  @inject_tag: json:"create_at"
  int64 CreateAt = 6;
}

message ConfirmFriendAndJoinDialogRequest {
  //  @inject_tag: json:"owner_id"
  string OwnerId = 1;  // 创建者id
  //  @inject_tag: json:"user_id"
  string UserId = 2;   // 对方用户id
  //  @inject_tag: json:"type"
  DialogType Type = 3; // 会话类型 (0:用户会话, 1:群组会话)
  //  @inject_tag: json:"group_id"
  uint32 GroupId = 4;  // 群组id
}

message ConfirmFriendAndJoinDialogResponse {
  //  @inject_tag: json:"id"
  uint32 Id = 1;        // 会话id
  //  @inject_tag: json:"owner_id"
  string OwnerId = 2;   // 创建者id
  //  @inject_tag: json:"type"
  DialogType Type = 3;  // 会话类型 (0:用户会话, 1:群组会话)
  //  @inject_tag: json:"group_id"
  uint32 GroupId = 4;   // 群组id
}

enum DialogType {
  USER_DIALOG = 0;  // 用户会话
  GROUP_DIALOG = 1; // 群组会话
}

message ConfirmFriendAndJoinDialogRevertRequest {
  //  @inject_tag: json:"owner_id"
  string OwnerId = 1;  // 创建者id
  //  @inject_tag: json:"user_id"
  string UserId = 2;   // 对方用户id
  //  @inject_tag: json:"type"
  DialogType Type = 3; // 会话类型 (0:用户会话, 1:群组会话)
  //  @inject_tag: json:"group_id"
  uint32 GroupId = 4;  // 群组id
  //  @inject_tag: json:"dialog_id"
  uint32 DialogId = 5;        // 会话id
}

enum CloseOrOpenDialogType {
  CLOSE = 0;
  OPEN = 1;
}
enum TopOrCancelTopDialogType {
  CANCEL_TOP = 0;
  TOP = 1;
}

message CloseOrOpenDialogRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  // @inject_tag: json:"user_id"
  string UserId = 2;
  // @inject_tag: json:"action"
  CloseOrOpenDialogType Action = 3;
}

message BatchCloseOrOpenDialogRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  // @inject_tag: json:"user_ids"
 repeated string UserIds = 2;
  // @inject_tag: json:"action"
  CloseOrOpenDialogType Action = 3;
}

message GetDialogByIdRequest{
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
}

message GetAllUsersInConversationRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
}

message GetAllUsersInConversationResponse {
  // @inject_tag: json:"user_ids"
  repeated string UserIds = 1;
}
