// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: api/grpc/v1/dialog.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DialogType int32

const (
	DialogType_USER_DIALOG  DialogType = 0 // 用户会话
	DialogType_GROUP_DIALOG DialogType = 1 // 群组会话
)

// Enum value maps for DialogType.
var (
	DialogType_name = map[int32]string{
		0: "USER_DIALOG",
		1: "GROUP_DIALOG",
	}
	DialogType_value = map[string]int32{
		"USER_DIALOG":  0,
		"GROUP_DIALOG": 1,
	}
)

func (x DialogType) Enum() *DialogType {
	p := new(DialogType)
	*p = x
	return p
}

func (x DialogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DialogType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_grpc_v1_dialog_proto_enumTypes[0].Descriptor()
}

func (DialogType) Type() protoreflect.EnumType {
	return &file_api_grpc_v1_dialog_proto_enumTypes[0]
}

func (x DialogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DialogType.Descriptor instead.
func (DialogType) EnumDescriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{0}
}

type CloseOrOpenDialogType int32

const (
	CloseOrOpenDialogType_CLOSE CloseOrOpenDialogType = 0
	CloseOrOpenDialogType_OPEN  CloseOrOpenDialogType = 1
)

// Enum value maps for CloseOrOpenDialogType.
var (
	CloseOrOpenDialogType_name = map[int32]string{
		0: "CLOSE",
		1: "OPEN",
	}
	CloseOrOpenDialogType_value = map[string]int32{
		"CLOSE": 0,
		"OPEN":  1,
	}
)

func (x CloseOrOpenDialogType) Enum() *CloseOrOpenDialogType {
	p := new(CloseOrOpenDialogType)
	*p = x
	return p
}

func (x CloseOrOpenDialogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloseOrOpenDialogType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_grpc_v1_dialog_proto_enumTypes[1].Descriptor()
}

func (CloseOrOpenDialogType) Type() protoreflect.EnumType {
	return &file_api_grpc_v1_dialog_proto_enumTypes[1]
}

func (x CloseOrOpenDialogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloseOrOpenDialogType.Descriptor instead.
func (CloseOrOpenDialogType) EnumDescriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{1}
}

type TopOrCancelTopDialogType int32

const (
	TopOrCancelTopDialogType_CANCEL_TOP TopOrCancelTopDialogType = 0
	TopOrCancelTopDialogType_TOP        TopOrCancelTopDialogType = 1
)

// Enum value maps for TopOrCancelTopDialogType.
var (
	TopOrCancelTopDialogType_name = map[int32]string{
		0: "CANCEL_TOP",
		1: "TOP",
	}
	TopOrCancelTopDialogType_value = map[string]int32{
		"CANCEL_TOP": 0,
		"TOP":        1,
	}
)

func (x TopOrCancelTopDialogType) Enum() *TopOrCancelTopDialogType {
	p := new(TopOrCancelTopDialogType)
	*p = x
	return p
}

func (x TopOrCancelTopDialogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopOrCancelTopDialogType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_grpc_v1_dialog_proto_enumTypes[2].Descriptor()
}

func (TopOrCancelTopDialogType) Type() protoreflect.EnumType {
	return &file_api_grpc_v1_dialog_proto_enumTypes[2]
}

func (x TopOrCancelTopDialogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TopOrCancelTopDialogType.Descriptor instead.
func (TopOrCancelTopDialogType) EnumDescriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{2}
}

type CreateDialogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"owner_id"
	OwnerId string `protobuf:"bytes,1,opt,name=OwnerId,proto3" json:"owner_id"`
	// @inject_tag: json:"type"
	Type uint32 `protobuf:"varint,2,opt,name=Type,proto3" json:"type"`
	// @inject_tag: json:"group_id"
	GroupId uint32 `protobuf:"varint,3,opt,name=GroupId,proto3" json:"group_id"`
}

func (x *CreateDialogRequest) Reset() {
	*x = CreateDialogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDialogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDialogRequest) ProtoMessage() {}

func (x *CreateDialogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDialogRequest.ProtoReflect.Descriptor instead.
func (*CreateDialogRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDialogRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreateDialogRequest) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateDialogRequest) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type CreateDialogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	Id uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"id"`
	// @inject_tag: json:"owner_id"
	OwnerId string `protobuf:"bytes,2,opt,name=OwnerId,proto3" json:"owner_id"`
	// @inject_tag: json:"type"
	Type uint32 `protobuf:"varint,3,opt,name=Type,proto3" json:"type"`
	// @inject_tag: json:"group_id"
	GroupId uint32 `protobuf:"varint,4,opt,name=GroupId,proto3" json:"group_id"`
}

func (x *CreateDialogResponse) Reset() {
	*x = CreateDialogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDialogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDialogResponse) ProtoMessage() {}

func (x *CreateDialogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDialogResponse.ProtoReflect.Descriptor instead.
func (*CreateDialogResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDialogResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateDialogResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreateDialogResponse) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateDialogResponse) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type JoinDialogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"user_id"`
}

func (x *JoinDialogRequest) Reset() {
	*x = JoinDialogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinDialogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinDialogRequest) ProtoMessage() {}

func (x *JoinDialogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinDialogRequest.ProtoReflect.Descriptor instead.
func (*JoinDialogRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{2}
}

func (x *JoinDialogRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *JoinDialogRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type JoinDialogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinDialogResponse) Reset() {
	*x = JoinDialogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinDialogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinDialogResponse) ProtoMessage() {}

func (x *JoinDialogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinDialogResponse.ProtoReflect.Descriptor instead.
func (*JoinDialogResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{3}
}

type GetUserDialogListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"user_id"`
	// @inject_tag: json:"page_size"
	PageSize uint32 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"page_size"`
	// @inject_tag: json:"page_num"
	PageNum uint32 `protobuf:"varint,3,opt,name=PageNum,proto3" json:"page_num"`
}

func (x *GetUserDialogListRequest) Reset() {
	*x = GetUserDialogListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDialogListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDialogListRequest) ProtoMessage() {}

func (x *GetUserDialogListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDialogListRequest.ProtoReflect.Descriptor instead.
func (*GetUserDialogListRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserDialogListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserDialogListRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetUserDialogListRequest) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type GetUserDialogListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_ids"
	DialogIds []uint32 `protobuf:"varint,1,rep,packed,name=DialogIds,proto3" json:"dialog_ids"`
	// @inject_tag: json:"total"
	Total uint64 `protobuf:"varint,2,opt,name=Total,proto3" json:"total"`
}

func (x *GetUserDialogListResponse) Reset() {
	*x = GetUserDialogListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDialogListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDialogListResponse) ProtoMessage() {}

func (x *GetUserDialogListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDialogListResponse.ProtoReflect.Descriptor instead.
func (*GetUserDialogListResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserDialogListResponse) GetDialogIds() []uint32 {
	if x != nil {
		return x.DialogIds
	}
	return nil
}

func (x *GetUserDialogListResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetDialogByIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_ids"
	DialogIds []uint32 `protobuf:"varint,1,rep,packed,name=DialogIds,proto3" json:"dialog_ids"`
}

func (x *GetDialogByIdsRequest) Reset() {
	*x = GetDialogByIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogByIdsRequest) ProtoMessage() {}

func (x *GetDialogByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogByIdsRequest.ProtoReflect.Descriptor instead.
func (*GetDialogByIdsRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{6}
}

func (x *GetDialogByIdsRequest) GetDialogIds() []uint32 {
	if x != nil {
		return x.DialogIds
	}
	return nil
}

type GetDialogByIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialogs"
	Dialogs []*Dialog `protobuf:"bytes,1,rep,name=Dialogs,proto3" json:"dialogs"`
}

func (x *GetDialogByIdsResponse) Reset() {
	*x = GetDialogByIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogByIdsResponse) ProtoMessage() {}

func (x *GetDialogByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogByIdsResponse.ProtoReflect.Descriptor instead.
func (*GetDialogByIdsResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{7}
}

func (x *GetDialogByIdsResponse) GetDialogs() []*Dialog {
	if x != nil {
		return x.Dialogs
	}
	return nil
}

type Dialog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	Id uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"id"`
	// @inject_tag: json:"owner_id"
	OwnerId string `protobuf:"bytes,2,opt,name=OwnerId,proto3" json:"owner_id"`
	// @inject_tag: json:"type"
	Type uint32 `protobuf:"varint,3,opt,name=Type,proto3" json:"type"`
	// @inject_tag: json:"group_id"
	GroupId uint32 `protobuf:"varint,4,opt,name=GroupId,proto3" json:"group_id"`
	// @inject_tag: json:"create_at"
	CreateAt int64 `protobuf:"varint,5,opt,name=CreateAt,proto3" json:"create_at"`
}

func (x *Dialog) Reset() {
	*x = Dialog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dialog) ProtoMessage() {}

func (x *Dialog) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dialog.ProtoReflect.Descriptor instead.
func (*Dialog) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{8}
}

func (x *Dialog) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Dialog) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Dialog) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Dialog) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Dialog) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

type GetDialogUsersByDialogIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
}

func (x *GetDialogUsersByDialogIDRequest) Reset() {
	*x = GetDialogUsersByDialogIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogUsersByDialogIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogUsersByDialogIDRequest) ProtoMessage() {}

func (x *GetDialogUsersByDialogIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogUsersByDialogIDRequest.ProtoReflect.Descriptor instead.
func (*GetDialogUsersByDialogIDRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{9}
}

func (x *GetDialogUsersByDialogIDRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

type GetDialogUsersByDialogIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_ids"
	UserIds []string `protobuf:"bytes,1,rep,name=UserIds,proto3" json:"user_ids"`
}

func (x *GetDialogUsersByDialogIDResponse) Reset() {
	*x = GetDialogUsersByDialogIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogUsersByDialogIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogUsersByDialogIDResponse) ProtoMessage() {}

func (x *GetDialogUsersByDialogIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogUsersByDialogIDResponse.ProtoReflect.Descriptor instead.
func (*GetDialogUsersByDialogIDResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{10}
}

func (x *GetDialogUsersByDialogIDResponse) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type DeleteDialogByIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_ids"
	DialogIds []uint32 `protobuf:"varint,1,rep,packed,name=DialogIds,proto3" json:"dialog_ids"`
}

func (x *DeleteDialogByIdsRequest) Reset() {
	*x = DeleteDialogByIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDialogByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDialogByIdsRequest) ProtoMessage() {}

func (x *DeleteDialogByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDialogByIdsRequest.ProtoReflect.Descriptor instead.
func (*DeleteDialogByIdsRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteDialogByIdsRequest) GetDialogIds() []uint32 {
	if x != nil {
		return x.DialogIds
	}
	return nil
}

type DeleteDialogByIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDialogByIdsResponse) Reset() {
	*x = DeleteDialogByIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDialogByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDialogByIdsResponse) ProtoMessage() {}

func (x *DeleteDialogByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDialogByIdsResponse.ProtoReflect.Descriptor instead.
func (*DeleteDialogByIdsResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{12}
}

type DeleteDialogByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
}

func (x *DeleteDialogByIdRequest) Reset() {
	*x = DeleteDialogByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDialogByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDialogByIdRequest) ProtoMessage() {}

func (x *DeleteDialogByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDialogByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteDialogByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteDialogByIdRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

type DeleteDialogByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDialogByIdResponse) Reset() {
	*x = DeleteDialogByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDialogByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDialogByIdResponse) ProtoMessage() {}

func (x *DeleteDialogByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDialogByIdResponse.ProtoReflect.Descriptor instead.
func (*DeleteDialogByIdResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{14}
}

type DeleteDialogUsersByDialogIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
}

func (x *DeleteDialogUsersByDialogIDRequest) Reset() {
	*x = DeleteDialogUsersByDialogIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDialogUsersByDialogIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDialogUsersByDialogIDRequest) ProtoMessage() {}

func (x *DeleteDialogUsersByDialogIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDialogUsersByDialogIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteDialogUsersByDialogIDRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteDialogUsersByDialogIDRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

type DeleteDialogUsersByDialogIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDialogUsersByDialogIDResponse) Reset() {
	*x = DeleteDialogUsersByDialogIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDialogUsersByDialogIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDialogUsersByDialogIDResponse) ProtoMessage() {}

func (x *DeleteDialogUsersByDialogIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDialogUsersByDialogIDResponse.ProtoReflect.Descriptor instead.
func (*DeleteDialogUsersByDialogIDResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{16}
}

type GetDialogUserByDialogIDAndUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"user_id"`
}

func (x *GetDialogUserByDialogIDAndUserIdRequest) Reset() {
	*x = GetDialogUserByDialogIDAndUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogUserByDialogIDAndUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogUserByDialogIDAndUserIdRequest) ProtoMessage() {}

func (x *GetDialogUserByDialogIDAndUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogUserByDialogIDAndUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetDialogUserByDialogIDAndUserIdRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{17}
}

func (x *GetDialogUserByDialogIDAndUserIdRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *GetDialogUserByDialogIDAndUserIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetDialogUserByDialogIDAndUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"user_id"`
	// @inject_tag: json:"is_show"
	IsShow uint32 `protobuf:"varint,3,opt,name=IsShow,proto3" json:"is_show"`
	// @inject_tag: json:"top_at"
	TopAt uint64 `protobuf:"varint,4,opt,name=TopAt,proto3" json:"top_at"`
}

func (x *GetDialogUserByDialogIDAndUserIdResponse) Reset() {
	*x = GetDialogUserByDialogIDAndUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogUserByDialogIDAndUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogUserByDialogIDAndUserIdResponse) ProtoMessage() {}

func (x *GetDialogUserByDialogIDAndUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogUserByDialogIDAndUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetDialogUserByDialogIDAndUserIdResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{18}
}

func (x *GetDialogUserByDialogIDAndUserIdResponse) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *GetDialogUserByDialogIDAndUserIdResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetDialogUserByDialogIDAndUserIdResponse) GetIsShow() uint32 {
	if x != nil {
		return x.IsShow
	}
	return 0
}

func (x *GetDialogUserByDialogIDAndUserIdResponse) GetTopAt() uint64 {
	if x != nil {
		return x.TopAt
	}
	return 0
}

type DeleteDialogUserByDialogIDAndUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"user_id"`
}

func (x *DeleteDialogUserByDialogIDAndUserIDRequest) Reset() {
	*x = DeleteDialogUserByDialogIDAndUserIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDialogUserByDialogIDAndUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDialogUserByDialogIDAndUserIDRequest) ProtoMessage() {}

func (x *DeleteDialogUserByDialogIDAndUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDialogUserByDialogIDAndUserIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteDialogUserByDialogIDAndUserIDRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteDialogUserByDialogIDAndUserIDRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *DeleteDialogUserByDialogIDAndUserIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteDialogUserByDialogIDAndUserIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDialogUserByDialogIDAndUserIDResponse) Reset() {
	*x = DeleteDialogUserByDialogIDAndUserIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDialogUserByDialogIDAndUserIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDialogUserByDialogIDAndUserIDResponse) ProtoMessage() {}

func (x *DeleteDialogUserByDialogIDAndUserIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDialogUserByDialogIDAndUserIDResponse.ProtoReflect.Descriptor instead.
func (*DeleteDialogUserByDialogIDAndUserIDResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{20}
}

type GetDialogByGroupIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"group_id"
	GroupId uint32 `protobuf:"varint,1,opt,name=GroupId,proto3" json:"group_id"`
}

func (x *GetDialogByGroupIdRequest) Reset() {
	*x = GetDialogByGroupIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogByGroupIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogByGroupIdRequest) ProtoMessage() {}

func (x *GetDialogByGroupIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogByGroupIdRequest.ProtoReflect.Descriptor instead.
func (*GetDialogByGroupIdRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{21}
}

func (x *GetDialogByGroupIdRequest) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type GetDialogByGroupIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
	// @inject_tag: json:"group_id"
	GroupId uint32 `protobuf:"varint,2,opt,name=GroupId,proto3" json:"group_id"`
	// @inject_tag: json:"type"
	Type uint32 `protobuf:"varint,3,opt,name=Type,proto3" json:"type"`
	// @inject_tag: json:"is_show"
	IsShow uint32 `protobuf:"varint,4,opt,name=IsShow,proto3" json:"is_show"`
	// @inject_tag: json:"top_at"
	TopAt uint64 `protobuf:"varint,5,opt,name=TopAt,proto3" json:"top_at"`
	// @inject_tag: json:"create_at"
	CreateAt int64 `protobuf:"varint,6,opt,name=CreateAt,proto3" json:"create_at"`
}

func (x *GetDialogByGroupIdResponse) Reset() {
	*x = GetDialogByGroupIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogByGroupIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogByGroupIdResponse) ProtoMessage() {}

func (x *GetDialogByGroupIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogByGroupIdResponse.ProtoReflect.Descriptor instead.
func (*GetDialogByGroupIdResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{22}
}

func (x *GetDialogByGroupIdResponse) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *GetDialogByGroupIdResponse) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GetDialogByGroupIdResponse) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetDialogByGroupIdResponse) GetIsShow() uint32 {
	if x != nil {
		return x.IsShow
	}
	return 0
}

func (x *GetDialogByGroupIdResponse) GetTopAt() uint64 {
	if x != nil {
		return x.TopAt
	}
	return 0
}

func (x *GetDialogByGroupIdResponse) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

type GetDialogByGroupIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"group_id"
	GroupId []uint32 `protobuf:"varint,1,rep,packed,name=GroupId,proto3" json:"group_id"`
}

func (x *GetDialogByGroupIdsRequest) Reset() {
	*x = GetDialogByGroupIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogByGroupIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogByGroupIdsRequest) ProtoMessage() {}

func (x *GetDialogByGroupIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogByGroupIdsRequest.ProtoReflect.Descriptor instead.
func (*GetDialogByGroupIdsRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{23}
}

func (x *GetDialogByGroupIdsRequest) GetGroupId() []uint32 {
	if x != nil {
		return x.GroupId
	}
	return nil
}

type GetDialogByGroupIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialogs"
	Dialogs []*GetDialogByGroupIdResponse `protobuf:"bytes,1,rep,name=Dialogs,proto3" json:"dialogs"`
}

func (x *GetDialogByGroupIdsResponse) Reset() {
	*x = GetDialogByGroupIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogByGroupIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogByGroupIdsResponse) ProtoMessage() {}

func (x *GetDialogByGroupIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogByGroupIdsResponse.ProtoReflect.Descriptor instead.
func (*GetDialogByGroupIdsResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{24}
}

func (x *GetDialogByGroupIdsResponse) GetDialogs() []*GetDialogByGroupIdResponse {
	if x != nil {
		return x.Dialogs
	}
	return nil
}

type ConfirmFriendAndJoinDialogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"owner_id"
	OwnerId string `protobuf:"bytes,1,opt,name=OwnerId,proto3" json:"owner_id"` // 创建者id
	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"user_id"` // 对方用户id
	// @inject_tag: json:"type"
	Type DialogType `protobuf:"varint,3,opt,name=Type,proto3,enum=relation_v1.DialogType" json:"type"` // 会话类型 (0:用户会话, 1:群组会话)
	// @inject_tag: json:"group_id"
	GroupId uint32 `protobuf:"varint,4,opt,name=GroupId,proto3" json:"group_id"` // 群组id
}

func (x *ConfirmFriendAndJoinDialogRequest) Reset() {
	*x = ConfirmFriendAndJoinDialogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmFriendAndJoinDialogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmFriendAndJoinDialogRequest) ProtoMessage() {}

func (x *ConfirmFriendAndJoinDialogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmFriendAndJoinDialogRequest.ProtoReflect.Descriptor instead.
func (*ConfirmFriendAndJoinDialogRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{25}
}

func (x *ConfirmFriendAndJoinDialogRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ConfirmFriendAndJoinDialogRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConfirmFriendAndJoinDialogRequest) GetType() DialogType {
	if x != nil {
		return x.Type
	}
	return DialogType_USER_DIALOG
}

func (x *ConfirmFriendAndJoinDialogRequest) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type ConfirmFriendAndJoinDialogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	Id uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"id"` // 会话id
	// @inject_tag: json:"owner_id"
	OwnerId string `protobuf:"bytes,2,opt,name=OwnerId,proto3" json:"owner_id"` // 创建者id
	// @inject_tag: json:"type"
	Type DialogType `protobuf:"varint,3,opt,name=Type,proto3,enum=relation_v1.DialogType" json:"type"` // 会话类型 (0:用户会话, 1:群组会话)
	// @inject_tag: json:"group_id"
	GroupId uint32 `protobuf:"varint,4,opt,name=GroupId,proto3" json:"group_id"` // 群组id
}

func (x *ConfirmFriendAndJoinDialogResponse) Reset() {
	*x = ConfirmFriendAndJoinDialogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmFriendAndJoinDialogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmFriendAndJoinDialogResponse) ProtoMessage() {}

func (x *ConfirmFriendAndJoinDialogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmFriendAndJoinDialogResponse.ProtoReflect.Descriptor instead.
func (*ConfirmFriendAndJoinDialogResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{26}
}

func (x *ConfirmFriendAndJoinDialogResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfirmFriendAndJoinDialogResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ConfirmFriendAndJoinDialogResponse) GetType() DialogType {
	if x != nil {
		return x.Type
	}
	return DialogType_USER_DIALOG
}

func (x *ConfirmFriendAndJoinDialogResponse) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type ConfirmFriendAndJoinDialogRevertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"owner_id"
	OwnerId string `protobuf:"bytes,1,opt,name=OwnerId,proto3" json:"owner_id"` // 创建者id
	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"user_id"` // 对方用户id
	// @inject_tag: json:"type"
	Type DialogType `protobuf:"varint,3,opt,name=Type,proto3,enum=relation_v1.DialogType" json:"type"` // 会话类型 (0:用户会话, 1:群组会话)
	// @inject_tag: json:"group_id"
	GroupId uint32 `protobuf:"varint,4,opt,name=GroupId,proto3" json:"group_id"` // 群组id
	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,5,opt,name=DialogId,proto3" json:"dialog_id"` // 会话id
}

func (x *ConfirmFriendAndJoinDialogRevertRequest) Reset() {
	*x = ConfirmFriendAndJoinDialogRevertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmFriendAndJoinDialogRevertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmFriendAndJoinDialogRevertRequest) ProtoMessage() {}

func (x *ConfirmFriendAndJoinDialogRevertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmFriendAndJoinDialogRevertRequest.ProtoReflect.Descriptor instead.
func (*ConfirmFriendAndJoinDialogRevertRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{27}
}

func (x *ConfirmFriendAndJoinDialogRevertRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ConfirmFriendAndJoinDialogRevertRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConfirmFriendAndJoinDialogRevertRequest) GetType() DialogType {
	if x != nil {
		return x.Type
	}
	return DialogType_USER_DIALOG
}

func (x *ConfirmFriendAndJoinDialogRevertRequest) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ConfirmFriendAndJoinDialogRevertRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

type ConfirmFriendAndJoinDialogRevertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfirmFriendAndJoinDialogRevertResponse) Reset() {
	*x = ConfirmFriendAndJoinDialogRevertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmFriendAndJoinDialogRevertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmFriendAndJoinDialogRevertResponse) ProtoMessage() {}

func (x *ConfirmFriendAndJoinDialogRevertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmFriendAndJoinDialogRevertResponse.ProtoReflect.Descriptor instead.
func (*ConfirmFriendAndJoinDialogRevertResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{28}
}

type CreateAndJoinDialogWithGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"owner_id"
	OwnerId string `protobuf:"bytes,1,opt,name=OwnerId,proto3" json:"owner_id"` // 创建者id
	// @inject_tag: json:"type"
	Type uint32 `protobuf:"varint,2,opt,name=Type,proto3" json:"type"` // 会话类型 (用户会话=0, 群组会话=1)
	// @inject_tag: json:"group_id"
	GroupId uint32 `protobuf:"varint,3,opt,name=GroupId,proto3" json:"group_id"` // 群组id
	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,4,opt,name=DialogId,proto3" json:"dialog_id"` // 会话id
	// @inject_tag: json:"user_id"
	UserIds []string `protobuf:"bytes,5,rep,name=UserIds,proto3" json:"user_id"` // 对方用户id列表
}

func (x *CreateAndJoinDialogWithGroupRequest) Reset() {
	*x = CreateAndJoinDialogWithGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAndJoinDialogWithGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAndJoinDialogWithGroupRequest) ProtoMessage() {}

func (x *CreateAndJoinDialogWithGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAndJoinDialogWithGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateAndJoinDialogWithGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{29}
}

func (x *CreateAndJoinDialogWithGroupRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreateAndJoinDialogWithGroupRequest) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateAndJoinDialogWithGroupRequest) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *CreateAndJoinDialogWithGroupRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *CreateAndJoinDialogWithGroupRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type CreateAndJoinDialogWithGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	Id uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"id"`
	// @inject_tag: json:"owner_id"
	OwnerId string `protobuf:"bytes,2,opt,name=OwnerId,proto3" json:"owner_id"` // 创建者id
	// @inject_tag: json:"type"
	Type uint32 `protobuf:"varint,3,opt,name=Type,proto3" json:"type"` // 会话类型 (用户会话=0, 群组会话=1)
	// @inject_tag: json:"group_id"
	GroupId uint32 `protobuf:"varint,4,opt,name=GroupId,proto3" json:"group_id"` // 群组id
}

func (x *CreateAndJoinDialogWithGroupResponse) Reset() {
	*x = CreateAndJoinDialogWithGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAndJoinDialogWithGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAndJoinDialogWithGroupResponse) ProtoMessage() {}

func (x *CreateAndJoinDialogWithGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAndJoinDialogWithGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateAndJoinDialogWithGroupResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{30}
}

func (x *CreateAndJoinDialogWithGroupResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateAndJoinDialogWithGroupResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreateAndJoinDialogWithGroupResponse) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateAndJoinDialogWithGroupResponse) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type CloseOrOpenDialogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"user_id"`
	// @inject_tag: json:"action"
	Action CloseOrOpenDialogType `protobuf:"varint,3,opt,name=Action,proto3,enum=relation_v1.CloseOrOpenDialogType" json:"action"`
}

func (x *CloseOrOpenDialogRequest) Reset() {
	*x = CloseOrOpenDialogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseOrOpenDialogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseOrOpenDialogRequest) ProtoMessage() {}

func (x *CloseOrOpenDialogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseOrOpenDialogRequest.ProtoReflect.Descriptor instead.
func (*CloseOrOpenDialogRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{31}
}

func (x *CloseOrOpenDialogRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *CloseOrOpenDialogRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CloseOrOpenDialogRequest) GetAction() CloseOrOpenDialogType {
	if x != nil {
		return x.Action
	}
	return CloseOrOpenDialogType_CLOSE
}

type BatchCloseOrOpenDialogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
	// @inject_tag: json:"user_ids"
	UserIds []string `protobuf:"bytes,2,rep,name=UserIds,proto3" json:"user_ids"`
	// @inject_tag: json:"action"
	Action CloseOrOpenDialogType `protobuf:"varint,3,opt,name=Action,proto3,enum=relation_v1.CloseOrOpenDialogType" json:"action"`
}

func (x *BatchCloseOrOpenDialogRequest) Reset() {
	*x = BatchCloseOrOpenDialogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCloseOrOpenDialogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCloseOrOpenDialogRequest) ProtoMessage() {}

func (x *BatchCloseOrOpenDialogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCloseOrOpenDialogRequest.ProtoReflect.Descriptor instead.
func (*BatchCloseOrOpenDialogRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{32}
}

func (x *BatchCloseOrOpenDialogRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *BatchCloseOrOpenDialogRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *BatchCloseOrOpenDialogRequest) GetAction() CloseOrOpenDialogType {
	if x != nil {
		return x.Action
	}
	return CloseOrOpenDialogType_CLOSE
}

type TopOrCancelTopDialogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"user_id"`
	// @inject_tag: json:"action"
	Action TopOrCancelTopDialogType `protobuf:"varint,3,opt,name=Action,proto3,enum=relation_v1.TopOrCancelTopDialogType" json:"action"`
}

func (x *TopOrCancelTopDialogRequest) Reset() {
	*x = TopOrCancelTopDialogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopOrCancelTopDialogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopOrCancelTopDialogRequest) ProtoMessage() {}

func (x *TopOrCancelTopDialogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopOrCancelTopDialogRequest.ProtoReflect.Descriptor instead.
func (*TopOrCancelTopDialogRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{33}
}

func (x *TopOrCancelTopDialogRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *TopOrCancelTopDialogRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TopOrCancelTopDialogRequest) GetAction() TopOrCancelTopDialogType {
	if x != nil {
		return x.Action
	}
	return TopOrCancelTopDialogType_CANCEL_TOP
}

type GetDialogByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
}

func (x *GetDialogByIdRequest) Reset() {
	*x = GetDialogByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogByIdRequest) ProtoMessage() {}

func (x *GetDialogByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogByIdRequest.ProtoReflect.Descriptor instead.
func (*GetDialogByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{34}
}

func (x *GetDialogByIdRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

type GetAllUsersInConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
}

func (x *GetAllUsersInConversationRequest) Reset() {
	*x = GetAllUsersInConversationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllUsersInConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUsersInConversationRequest) ProtoMessage() {}

func (x *GetAllUsersInConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUsersInConversationRequest.ProtoReflect.Descriptor instead.
func (*GetAllUsersInConversationRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{35}
}

func (x *GetAllUsersInConversationRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

type GetAllUsersInConversationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_ids"
	UserIds []string `protobuf:"bytes,1,rep,name=UserIds,proto3" json:"user_ids"`
}

func (x *GetAllUsersInConversationResponse) Reset() {
	*x = GetAllUsersInConversationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllUsersInConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUsersInConversationResponse) ProtoMessage() {}

func (x *GetAllUsersInConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUsersInConversationResponse.ProtoReflect.Descriptor instead.
func (*GetAllUsersInConversationResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{36}
}

func (x *GetAllUsersInConversationResponse) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type GetDialogTargetUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"dialog_id"
	DialogId uint32 `protobuf:"varint,1,opt,name=DialogId,proto3" json:"dialog_id"`
	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"user_id"`
}

func (x *GetDialogTargetUserIdRequest) Reset() {
	*x = GetDialogTargetUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogTargetUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogTargetUserIdRequest) ProtoMessage() {}

func (x *GetDialogTargetUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogTargetUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetDialogTargetUserIdRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{37}
}

func (x *GetDialogTargetUserIdRequest) GetDialogId() uint32 {
	if x != nil {
		return x.DialogId
	}
	return 0
}

func (x *GetDialogTargetUserIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetDialogTargetUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_ids"
	UserIds []string `protobuf:"bytes,1,rep,name=UserIds,proto3" json:"user_ids"`
}

func (x *GetDialogTargetUserIdResponse) Reset() {
	*x = GetDialogTargetUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_dialog_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogTargetUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogTargetUserIdResponse) ProtoMessage() {}

func (x *GetDialogTargetUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_dialog_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogTargetUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetDialogTargetUserIdResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_dialog_proto_rawDescGZIP(), []int{38}
}

func (x *GetDialogTargetUserIdResponse) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

var File_api_grpc_v1_dialog_proto protoreflect.FileDescriptor

var file_api_grpc_v1_dialog_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x11, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12,
	0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x68, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x4f, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x35, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x64, 0x73, 0x22, 0x47, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x07, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x52, 0x07, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x7c, 0x0a,
	0x06, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x3d, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49,
	0x64, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x35, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x40, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x27, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x28, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x49,
	0x73, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x49, 0x73, 0x53,
	0x68, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x41, 0x74, 0x22, 0x60, 0x0a, 0x2a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x2b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x22, 0xb0, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73,
	0x53, 0x68, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x49, 0x73, 0x53, 0x68,
	0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x22, 0x36, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x9c,
	0x01, 0x0a, 0x21, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x95, 0x01,
	0x0a, 0x22, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x27, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x28, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64,
	0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x57, 0x69, 0x74, 0x68, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x7e, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x57,
	0x69, 0x74, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x18, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x4f, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x4f,
	0x70, 0x65, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x1d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x3a, 0x0a,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x4f, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x1b, 0x54, 0x6f,
	0x70, 0x4f, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3d, 0x0a,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x4f,
	0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64,
	0x22, 0x3e, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49,
	0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64,
	0x22, 0x3d, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49,
	0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22,
	0x52, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x2a, 0x2f,
	0x0a, 0x0a, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x49, 0x41, 0x4c, 0x4f, 0x47, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x44, 0x49, 0x41, 0x4c, 0x4f, 0x47, 0x10, 0x01, 0x2a,
	0x2c, 0x0a, 0x15, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4c, 0x4f, 0x53,
	0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x2a, 0x33, 0x0a,
	0x18, 0x54, 0x6f, 0x70, 0x4f, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x5f, 0x54, 0x4f, 0x50, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x4f, 0x50,
	0x10, 0x01, 0x32, 0xaf, 0x17, 0x0a, 0x0d, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x57, 0x69, 0x74, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x30, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x57, 0x69,
	0x74, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x57, 0x69, 0x74, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e,
	0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x57, 0x69, 0x74, 0x68, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x12, 0x30, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x57, 0x69, 0x74, 0x68,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x57, 0x69,
	0x74, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7f, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12,
	0x2e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x4a, 0x6f,
	0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x4a, 0x6f,
	0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x20, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x12, 0x34, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x12, 0x1e, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x12, 0x2c, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x34, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x35, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x27, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x64, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x25, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x49, 0x64, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x76,
	0x65, 0x72, 0x74, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x49, 0x44, 0x12, 0x2f, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x12, 0x2f, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x9a, 0x01, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49,
	0x44, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x37, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xa0, 0x01, 0x0a, 0x29, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x41, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x12, 0x37, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x41,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x54, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x4f, 0x70, 0x65,
	0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x25, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x4f, 0x70, 0x65,
	0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x12, 0x2a, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x4f, 0x70, 0x65,
	0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x14, 0x54, 0x6f, 0x70, 0x4f,
	0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x12, 0x28, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x54,
	0x6f, 0x70, 0x4f, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x70, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x73, 0x69, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x73, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_grpc_v1_dialog_proto_rawDescOnce sync.Once
	file_api_grpc_v1_dialog_proto_rawDescData = file_api_grpc_v1_dialog_proto_rawDesc
)

func file_api_grpc_v1_dialog_proto_rawDescGZIP() []byte {
	file_api_grpc_v1_dialog_proto_rawDescOnce.Do(func() {
		file_api_grpc_v1_dialog_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_grpc_v1_dialog_proto_rawDescData)
	})
	return file_api_grpc_v1_dialog_proto_rawDescData
}

var file_api_grpc_v1_dialog_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_grpc_v1_dialog_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_api_grpc_v1_dialog_proto_goTypes = []interface{}{
	(DialogType)(0),                                     // 0: relation_v1.DialogType
	(CloseOrOpenDialogType)(0),                          // 1: relation_v1.CloseOrOpenDialogType
	(TopOrCancelTopDialogType)(0),                       // 2: relation_v1.TopOrCancelTopDialogType
	(*CreateDialogRequest)(nil),                         // 3: relation_v1.CreateDialogRequest
	(*CreateDialogResponse)(nil),                        // 4: relation_v1.CreateDialogResponse
	(*JoinDialogRequest)(nil),                           // 5: relation_v1.JoinDialogRequest
	(*JoinDialogResponse)(nil),                          // 6: relation_v1.JoinDialogResponse
	(*GetUserDialogListRequest)(nil),                    // 7: relation_v1.GetUserDialogListRequest
	(*GetUserDialogListResponse)(nil),                   // 8: relation_v1.GetUserDialogListResponse
	(*GetDialogByIdsRequest)(nil),                       // 9: relation_v1.GetDialogByIdsRequest
	(*GetDialogByIdsResponse)(nil),                      // 10: relation_v1.GetDialogByIdsResponse
	(*Dialog)(nil),                                      // 11: relation_v1.Dialog
	(*GetDialogUsersByDialogIDRequest)(nil),             // 12: relation_v1.GetDialogUsersByDialogIDRequest
	(*GetDialogUsersByDialogIDResponse)(nil),            // 13: relation_v1.GetDialogUsersByDialogIDResponse
	(*DeleteDialogByIdsRequest)(nil),                    // 14: relation_v1.DeleteDialogByIdsRequest
	(*DeleteDialogByIdsResponse)(nil),                   // 15: relation_v1.DeleteDialogByIdsResponse
	(*DeleteDialogByIdRequest)(nil),                     // 16: relation_v1.DeleteDialogByIdRequest
	(*DeleteDialogByIdResponse)(nil),                    // 17: relation_v1.DeleteDialogByIdResponse
	(*DeleteDialogUsersByDialogIDRequest)(nil),          // 18: relation_v1.DeleteDialogUsersByDialogIDRequest
	(*DeleteDialogUsersByDialogIDResponse)(nil),         // 19: relation_v1.DeleteDialogUsersByDialogIDResponse
	(*GetDialogUserByDialogIDAndUserIdRequest)(nil),     // 20: relation_v1.GetDialogUserByDialogIDAndUserIdRequest
	(*GetDialogUserByDialogIDAndUserIdResponse)(nil),    // 21: relation_v1.GetDialogUserByDialogIDAndUserIdResponse
	(*DeleteDialogUserByDialogIDAndUserIDRequest)(nil),  // 22: relation_v1.DeleteDialogUserByDialogIDAndUserIDRequest
	(*DeleteDialogUserByDialogIDAndUserIDResponse)(nil), // 23: relation_v1.DeleteDialogUserByDialogIDAndUserIDResponse
	(*GetDialogByGroupIdRequest)(nil),                   // 24: relation_v1.GetDialogByGroupIdRequest
	(*GetDialogByGroupIdResponse)(nil),                  // 25: relation_v1.GetDialogByGroupIdResponse
	(*GetDialogByGroupIdsRequest)(nil),                  // 26: relation_v1.GetDialogByGroupIdsRequest
	(*GetDialogByGroupIdsResponse)(nil),                 // 27: relation_v1.GetDialogByGroupIdsResponse
	(*ConfirmFriendAndJoinDialogRequest)(nil),           // 28: relation_v1.ConfirmFriendAndJoinDialogRequest
	(*ConfirmFriendAndJoinDialogResponse)(nil),          // 29: relation_v1.ConfirmFriendAndJoinDialogResponse
	(*ConfirmFriendAndJoinDialogRevertRequest)(nil),     // 30: relation_v1.ConfirmFriendAndJoinDialogRevertRequest
	(*ConfirmFriendAndJoinDialogRevertResponse)(nil),    // 31: relation_v1.ConfirmFriendAndJoinDialogRevertResponse
	(*CreateAndJoinDialogWithGroupRequest)(nil),         // 32: relation_v1.CreateAndJoinDialogWithGroupRequest
	(*CreateAndJoinDialogWithGroupResponse)(nil),        // 33: relation_v1.CreateAndJoinDialogWithGroupResponse
	(*CloseOrOpenDialogRequest)(nil),                    // 34: relation_v1.CloseOrOpenDialogRequest
	(*BatchCloseOrOpenDialogRequest)(nil),               // 35: relation_v1.BatchCloseOrOpenDialogRequest
	(*TopOrCancelTopDialogRequest)(nil),                 // 36: relation_v1.TopOrCancelTopDialogRequest
	(*GetDialogByIdRequest)(nil),                        // 37: relation_v1.GetDialogByIdRequest
	(*GetAllUsersInConversationRequest)(nil),            // 38: relation_v1.GetAllUsersInConversationRequest
	(*GetAllUsersInConversationResponse)(nil),           // 39: relation_v1.GetAllUsersInConversationResponse
	(*GetDialogTargetUserIdRequest)(nil),                // 40: relation_v1.GetDialogTargetUserIdRequest
	(*GetDialogTargetUserIdResponse)(nil),               // 41: relation_v1.GetDialogTargetUserIdResponse
	(*emptypb.Empty)(nil),                               // 42: google.protobuf.Empty
}
var file_api_grpc_v1_dialog_proto_depIdxs = []int32{
	11, // 0: relation_v1.GetDialogByIdsResponse.Dialogs:type_name -> relation_v1.Dialog
	25, // 1: relation_v1.GetDialogByGroupIdsResponse.Dialogs:type_name -> relation_v1.GetDialogByGroupIdResponse
	0,  // 2: relation_v1.ConfirmFriendAndJoinDialogRequest.Type:type_name -> relation_v1.DialogType
	0,  // 3: relation_v1.ConfirmFriendAndJoinDialogResponse.Type:type_name -> relation_v1.DialogType
	0,  // 4: relation_v1.ConfirmFriendAndJoinDialogRevertRequest.Type:type_name -> relation_v1.DialogType
	1,  // 5: relation_v1.CloseOrOpenDialogRequest.Action:type_name -> relation_v1.CloseOrOpenDialogType
	1,  // 6: relation_v1.BatchCloseOrOpenDialogRequest.Action:type_name -> relation_v1.CloseOrOpenDialogType
	2,  // 7: relation_v1.TopOrCancelTopDialogRequest.Action:type_name -> relation_v1.TopOrCancelTopDialogType
	3,  // 8: relation_v1.DialogService.CreateDialog:input_type -> relation_v1.CreateDialogRequest
	32, // 9: relation_v1.DialogService.CreateAndJoinDialogWithGroup:input_type -> relation_v1.CreateAndJoinDialogWithGroupRequest
	32, // 10: relation_v1.DialogService.CreateAndJoinDialogWithGroupRevert:input_type -> relation_v1.CreateAndJoinDialogWithGroupRequest
	28, // 11: relation_v1.DialogService.ConfirmFriendAndJoinDialog:input_type -> relation_v1.ConfirmFriendAndJoinDialogRequest
	30, // 12: relation_v1.DialogService.ConfirmFriendAndJoinDialogRevert:input_type -> relation_v1.ConfirmFriendAndJoinDialogRevertRequest
	5,  // 13: relation_v1.DialogService.JoinDialog:input_type -> relation_v1.JoinDialogRequest
	5,  // 14: relation_v1.DialogService.JoinDialogRevert:input_type -> relation_v1.JoinDialogRequest
	7,  // 15: relation_v1.DialogService.GetUserDialogList:input_type -> relation_v1.GetUserDialogListRequest
	9,  // 16: relation_v1.DialogService.GetDialogByIds:input_type -> relation_v1.GetDialogByIdsRequest
	37, // 17: relation_v1.DialogService.GetDialogById:input_type -> relation_v1.GetDialogByIdRequest
	12, // 18: relation_v1.DialogService.GetDialogUsersByDialogID:input_type -> relation_v1.GetDialogUsersByDialogIDRequest
	20, // 19: relation_v1.DialogService.GetDialogUserByDialogIDAndUserID:input_type -> relation_v1.GetDialogUserByDialogIDAndUserIdRequest
	24, // 20: relation_v1.DialogService.GetDialogByGroupId:input_type -> relation_v1.GetDialogByGroupIdRequest
	26, // 21: relation_v1.DialogService.GetDialogByGroupIds:input_type -> relation_v1.GetDialogByGroupIdsRequest
	14, // 22: relation_v1.DialogService.DeleteDialogByIds:input_type -> relation_v1.DeleteDialogByIdsRequest
	16, // 23: relation_v1.DialogService.DeleteDialogById:input_type -> relation_v1.DeleteDialogByIdRequest
	16, // 24: relation_v1.DialogService.DeleteDialogByIdRevert:input_type -> relation_v1.DeleteDialogByIdRequest
	18, // 25: relation_v1.DialogService.DeleteDialogUsersByDialogID:input_type -> relation_v1.DeleteDialogUsersByDialogIDRequest
	18, // 26: relation_v1.DialogService.DeleteDialogUsersByDialogIDRevert:input_type -> relation_v1.DeleteDialogUsersByDialogIDRequest
	22, // 27: relation_v1.DialogService.DeleteDialogUserByDialogIDAndUserID:input_type -> relation_v1.DeleteDialogUserByDialogIDAndUserIDRequest
	22, // 28: relation_v1.DialogService.DeleteDialogUserByDialogIDAndUserIDRevert:input_type -> relation_v1.DeleteDialogUserByDialogIDAndUserIDRequest
	34, // 29: relation_v1.DialogService.CloseOrOpenDialog:input_type -> relation_v1.CloseOrOpenDialogRequest
	35, // 30: relation_v1.DialogService.BatchCloseOrOpenDialog:input_type -> relation_v1.BatchCloseOrOpenDialogRequest
	36, // 31: relation_v1.DialogService.TopOrCancelTopDialog:input_type -> relation_v1.TopOrCancelTopDialogRequest
	38, // 32: relation_v1.DialogService.GetAllUsersInConversation:input_type -> relation_v1.GetAllUsersInConversationRequest
	40, // 33: relation_v1.DialogService.GetDialogTargetUserId:input_type -> relation_v1.GetDialogTargetUserIdRequest
	4,  // 34: relation_v1.DialogService.CreateDialog:output_type -> relation_v1.CreateDialogResponse
	33, // 35: relation_v1.DialogService.CreateAndJoinDialogWithGroup:output_type -> relation_v1.CreateAndJoinDialogWithGroupResponse
	33, // 36: relation_v1.DialogService.CreateAndJoinDialogWithGroupRevert:output_type -> relation_v1.CreateAndJoinDialogWithGroupResponse
	29, // 37: relation_v1.DialogService.ConfirmFriendAndJoinDialog:output_type -> relation_v1.ConfirmFriendAndJoinDialogResponse
	31, // 38: relation_v1.DialogService.ConfirmFriendAndJoinDialogRevert:output_type -> relation_v1.ConfirmFriendAndJoinDialogRevertResponse
	6,  // 39: relation_v1.DialogService.JoinDialog:output_type -> relation_v1.JoinDialogResponse
	6,  // 40: relation_v1.DialogService.JoinDialogRevert:output_type -> relation_v1.JoinDialogResponse
	8,  // 41: relation_v1.DialogService.GetUserDialogList:output_type -> relation_v1.GetUserDialogListResponse
	10, // 42: relation_v1.DialogService.GetDialogByIds:output_type -> relation_v1.GetDialogByIdsResponse
	11, // 43: relation_v1.DialogService.GetDialogById:output_type -> relation_v1.Dialog
	13, // 44: relation_v1.DialogService.GetDialogUsersByDialogID:output_type -> relation_v1.GetDialogUsersByDialogIDResponse
	21, // 45: relation_v1.DialogService.GetDialogUserByDialogIDAndUserID:output_type -> relation_v1.GetDialogUserByDialogIDAndUserIdResponse
	25, // 46: relation_v1.DialogService.GetDialogByGroupId:output_type -> relation_v1.GetDialogByGroupIdResponse
	27, // 47: relation_v1.DialogService.GetDialogByGroupIds:output_type -> relation_v1.GetDialogByGroupIdsResponse
	15, // 48: relation_v1.DialogService.DeleteDialogByIds:output_type -> relation_v1.DeleteDialogByIdsResponse
	17, // 49: relation_v1.DialogService.DeleteDialogById:output_type -> relation_v1.DeleteDialogByIdResponse
	17, // 50: relation_v1.DialogService.DeleteDialogByIdRevert:output_type -> relation_v1.DeleteDialogByIdResponse
	19, // 51: relation_v1.DialogService.DeleteDialogUsersByDialogID:output_type -> relation_v1.DeleteDialogUsersByDialogIDResponse
	19, // 52: relation_v1.DialogService.DeleteDialogUsersByDialogIDRevert:output_type -> relation_v1.DeleteDialogUsersByDialogIDResponse
	23, // 53: relation_v1.DialogService.DeleteDialogUserByDialogIDAndUserID:output_type -> relation_v1.DeleteDialogUserByDialogIDAndUserIDResponse
	23, // 54: relation_v1.DialogService.DeleteDialogUserByDialogIDAndUserIDRevert:output_type -> relation_v1.DeleteDialogUserByDialogIDAndUserIDResponse
	42, // 55: relation_v1.DialogService.CloseOrOpenDialog:output_type -> google.protobuf.Empty
	42, // 56: relation_v1.DialogService.BatchCloseOrOpenDialog:output_type -> google.protobuf.Empty
	42, // 57: relation_v1.DialogService.TopOrCancelTopDialog:output_type -> google.protobuf.Empty
	39, // 58: relation_v1.DialogService.GetAllUsersInConversation:output_type -> relation_v1.GetAllUsersInConversationResponse
	41, // 59: relation_v1.DialogService.GetDialogTargetUserId:output_type -> relation_v1.GetDialogTargetUserIdResponse
	34, // [34:60] is the sub-list for method output_type
	8,  // [8:34] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_grpc_v1_dialog_proto_init() }
func file_api_grpc_v1_dialog_proto_init() {
	if File_api_grpc_v1_dialog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_grpc_v1_dialog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDialogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDialogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinDialogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinDialogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDialogListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDialogListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogByIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogByIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dialog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogUsersByDialogIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogUsersByDialogIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDialogByIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDialogByIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDialogByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDialogByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDialogUsersByDialogIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDialogUsersByDialogIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogUserByDialogIDAndUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogUserByDialogIDAndUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDialogUserByDialogIDAndUserIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDialogUserByDialogIDAndUserIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogByGroupIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogByGroupIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogByGroupIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogByGroupIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmFriendAndJoinDialogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmFriendAndJoinDialogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmFriendAndJoinDialogRevertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmFriendAndJoinDialogRevertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAndJoinDialogWithGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAndJoinDialogWithGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseOrOpenDialogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCloseOrOpenDialogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopOrCancelTopDialogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllUsersInConversationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllUsersInConversationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogTargetUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_dialog_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogTargetUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_grpc_v1_dialog_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_grpc_v1_dialog_proto_goTypes,
		DependencyIndexes: file_api_grpc_v1_dialog_proto_depIdxs,
		EnumInfos:         file_api_grpc_v1_dialog_proto_enumTypes,
		MessageInfos:      file_api_grpc_v1_dialog_proto_msgTypes,
	}.Build()
	File_api_grpc_v1_dialog_proto = out.File
	file_api_grpc_v1_dialog_proto_rawDesc = nil
	file_api_grpc_v1_dialog_proto_goTypes = nil
	file_api_grpc_v1_dialog_proto_depIdxs = nil
}
