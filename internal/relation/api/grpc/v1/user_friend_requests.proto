syntax = "proto3";
package relation_v1;
option go_package = "github.com/cossim/coss-server/internal/relation/api/grpc/v1";
import "google/protobuf/empty.proto";


message GetFriendRequestListRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"page_size"
  uint32 PageSize = 2;
  // @inject_tag: json:"page_num"
  uint32 PageNum = 3;
}

message GetFriendRequestListResponse {
  // @inject_tag: json:"friend_request_list"
  repeated FriendRequestList FriendRequestList = 1;
  // @inject_tag: json:"total"
  uint64 Total = 2;
}

message FriendRequestList {
  // @inject_tag: json:"id"
  uint32 ID = 1;
  // SenderId 发送方id
  // @inject_tag: json:"sender_id"
  string SenderId = 2;
  // ReceiverId 接收方id
  // @inject_tag: json:"receiver_id"
  string ReceiverId = 3;
  // @inject_tag: json:"status"
  FriendRequestStatus Status = 4;
  // Remark 请求备注
  // @inject_tag: json:"remark"
  string Remark = 5;
  // OwnerID 所有者id
  // @inject_tag: json:"owner_id"
  string OwnerID = 6;
  // @inject_tag: json:"create_at"
  uint64 CreateAt = 7;
  // @inject_tag: json:"expired_at"
  uint64 ExpiredAt = 8;
}

enum FriendRequestStatus {
  // 申请中
  FriendRequestStatus_PENDING = 0;
  // 已同意
  FriendRequestStatus_ACCEPT = 1;
  // 已拒绝
  FriendRequestStatus_REJECT = 2;
}

message SendFriendRequestStruct {
  // SenderId 发送请求方id
  // @inject_tag: json:"sender_id"
  string SenderId = 1;
  // ReceiverId 接收请求方id
  // @inject_tag: json:"receiver_id"
  string ReceiverId = 2;
  // Remark 申请信息
  // @inject_tag: json:"remark"
  string Remark = 3;
}

message ManageFriendRequestStruct {
  // @inject_tag: json:"id"
  uint32 ID = 1;
  // @inject_tag: json:"status"
  FriendRequestStatus Status = 3;
}

message GetFriendRequestByIdRequest {
  // @inject_tag: json:"id"
  uint32 ID = 1;
}

message GetFriendRequestByUserIdAndFriendIdRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"friend_id"
  string FriendId = 2;
}

message SendFriendRequestStructResponse {
  // @inject_tag: json:"id"
  uint32 ID = 1;
}

message DeleteFriendRequestByUserIdAndFriendIdRequest{
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"friend_id"
  string FriendId = 2;
}

message DeleteFriendRecordRequest {
  // @inject_tag: json:"id"
  uint32 ID = 1;
  // @inject_tag: json:"user_id"
  string UserId = 2;
}


service UserFriendRequestService {
  // 获取好友请求列表
  rpc GetFriendRequestList(GetFriendRequestListRequest) returns (GetFriendRequestListResponse);
  //发送好友请求
  rpc SendFriendRequest(SendFriendRequestStruct) returns (SendFriendRequestStructResponse);
  // 管理好友请求
  rpc ManageFriendRequest(ManageFriendRequestStruct) returns (google.protobuf.Empty);
  //根据请求id获取好友请求
  rpc GetFriendRequestById(GetFriendRequestByIdRequest) returns (FriendRequestList);
  //根据用户id与好友id获取请求
  rpc GetFriendRequestByUserIdAndFriendId(GetFriendRequestByUserIdAndFriendIdRequest) returns (FriendRequestList);
  //删除已经处理的请求
  rpc DeleteFriendRequestByUserIdAndFriendId(DeleteFriendRequestByUserIdAndFriendIdRequest) returns (google.protobuf.Empty);
  // 删除好友申请记录
  rpc DeleteFriendRecord(DeleteFriendRecordRequest) returns (google.protobuf.Empty);
}