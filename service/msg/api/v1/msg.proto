syntax = "proto3";
package v1;
option go_package = "github.com/cossim/coss-server/service/msg/api/v1";

message SendUserMsgRequest{
  // @inject_tag: json:"sender_id"
  string SenderId=1;
  // @inject_tag: json:"receiver_id"
  string ReceiverId=2;
  // @inject_tag: json:"content"
  string Content=3;
  // @inject_tag: json:"type"
  int32 Type=4;
  // @inject_tag: json:"replay_id"
  uint64 ReplayId=5;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 6;

}

message SendGroupMsgRequest{
  // @inject_tag: json:"user_id" form:"user_id" uri:"user_id"
  string UserId=1;
  // @inject_tag: json:"group_id" form:"group_id" uri:"group_id"
  uint32 GroupId=2;
  // @inject_tag: json:"content" form:"content" uri:"content"
  string Content=3;
  // @inject_tag: json:"type" form:"type" uri:"type"
  uint32 Type=4;
  // @inject_tag: json:"replay_id" form:"replay_id" uri:"replay_id"
  uint32 ReplayId=5;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 6;
}

message GetUserMsgListRequest{
  // @inject_tag: json:"user_id" form:"user_id" uri:"user_id"
  string UserId=1;
  // @inject_tag: json:"friend_id" form:"friend_id" uri:"friend_id"
  string FriendId = 2;
  // @inject_tag: json:"type" form:"type" uri:"type"
  int32 Type = 3;
  // @inject_tag: json:"content" form:"content" uri:"content"
  string Content = 4;
  // @inject_tag: json:"page_size" form:"page_size" uri:"page_size"
  int32 PageSize = 5;
  // @inject_tag: json:"page_number" form:"page_number" uri:"page_number"
  int32 PageNum = 6;
}

message UserMessage{
  // @inject_tag: json:"id"
  uint32 Id=1;
  // @inject_tag: json:"sender_id"
  string SenderId=2;
  // @inject_tag: json:"receiver_id"
  string ReceiverId=3;
  // @inject_tag: json:"content"
  string Content=4;
  // @inject_tag: json:"type"
  uint32 Type=5;
  // @inject_tag: json:"replay_id"
  uint64 ReplayId=6;
  // @inject_tag: json:"is_read"
  int32 IsRead=7;
  // @inject_tag: json:"read_at"
  int64 ReadAt=8;
  // @inject_tag: json:"receive_id"
  string ReceiveId=9;
  // @inject_tag: json:"created_at"
  int64 CreatedAt=10;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 11;
  // @inject_tag: json:"is_label"
  MsgLabel IsLabel = 12;
}

enum MsgLabel {
  NotLabel = 0; //未标注
  IsLabel = 1; //标注
}

message GroupMessage {
  // @inject_tag: json:"id"
  uint32 Id = 1;
  //  @inject_tag: json:"group_id"
  uint32 Group_id = 2;
  // @inject_tag: json:"type"
  uint32 Type = 3;
  // @inject_tag: json:"reply_id"
  uint32 Reply_id = 4;
  // @inject_tag: json:"read_count"
  int32 Read_count = 5;
  // @inject_tag: json:"user_id"
  string UserId = 6;
  // @inject_tag: json:"content"
  string Content = 7;
  // @inject_tag: json:"created_at"
  int64 Created_at = 8;
  // @inject_tag: json:"dialog_id"
  uint32 Dialog_id = 9;
  // @inject_tag: json:"is_label"
  MsgLabel IsLabel = 10;
}

message GetUserMsgListResponse{
  // @inject_tag: json:"user_messages" form:"user_messages" uri:"user_messages"
  repeated UserMessage UserMessages = 1;
  // @inject_tag: json:"total" form:"total" uri:"total"
  int32 Total = 2;
  // @inject_tag: json:"current_page" form:"current_page" uri:"current_page"
  int32 CurrentPage = 3;
}

message SendUserMsgResponse{
  // @inject_tag: json:"msg_id" form:"msg_id" uri:"msg_id"
  uint32 MsgId = 1;
}

message SendGroupMsgResponse{
  // @inject_tag: json:"msg_id" form:"msg_id" uri:"msg_id"
  uint32 MsgId = 1;
  // @inject_tag: json:"group_id" form:"group_id" uri:"group_id"
  uint32 GroupId = 2;
}

message UserMsgRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"friend_id"
  string FriendId = 2;
}

message GroupMsgRequest {
  // @inject_tag: json:"user_id"
  uint32 Group_id = 1;
}

message UserMessages {
  // @inject_tag: json:"user_messages"
  repeated UserMessage UserMessages = 1;
}

message GroupMessages {
  // @inject_tag: json:"group_messages"
  repeated GroupMessage GroupMessages = 1;
}

message UserMsgsRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"friend_id"
  repeated string Friend_id = 2;
}

message GroupMsgsRequest {
  // @inject_tag: json:"group_id"
  repeated uint32 Group_id = 1;
}

message LastMsg {
  // @inject_tag: json:"id"
  uint32 Id = 1;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 2;
  // @inject_tag: json:"type"
  uint32 Type = 3;
  // @inject_tag: json:"content"
  string content = 4;
  // @inject_tag: json:"created_at"
  int64 CreatedAt = 5;
  // @inject_tag: json:"sender_id"
  string SenderId = 6;
}

message GetLastMsgsResponse {
  repeated LastMsg LastMsgs = 1;
}

message GetLastMsgsByDialogIdsRequest {
  // @inject_tag: json:"dialog_ids"
  repeated uint32 DialogIds = 1;
}

message EditUserMsgRequest {
  // @inject_tag: json:"user_message"
  UserMessage UserMessage = 1;
}

message DeleteUserMsgRequest {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
}

message EditGroupMsgRequest {
  // @inject_tag: json:"group_message"
  GroupMessage GroupMessage = 1;
}

message DeleteGroupMsgRequest {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
}

message GetUserMsgByIDRequest {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
}

message GetGroupMsgByIDRequest {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
}

message SetUserMsgLabelRequest {
  // @inject_tag: json:"msg_id"
  uint32 msgId = 1;
  // @inject_tag: json:"is_label"
  MsgLabel IsLabel = 2;
}

message SetGroupMsgLabelRequest {
  // @inject_tag: json:"msg_id"
  uint32 msgId = 1;
  // @inject_tag: json:"is_label"
  MsgLabel IsLabel = 2;
}

message SetUserMsgLabelResponse {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
}

message SetGroupMsgLabelResponse {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
}

message GetUserMsgLabelByDialogIdRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
}

message GetGroupMsgLabelByDialogIdRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
}

message GetUserMsgLabelByDialogIdResponse {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  // @inject_tag: json:"msg_list"
  repeated UserMessage MsgList = 2;
}

message GetGroupMsgLabelByDialogIdResponse {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  // @inject_tag: json:"msg_list"
  repeated GroupMessage MsgList = 2;
}

////批量设置私聊消息id为已读
//    rpc SetUserMsgsReadStatus(SetUserMsgReadStatusRequest) returns (SetUserMsgReadStatusResponse);
////修改指定私聊消息的已读状态
//    rpc SetUserMsgReadStatus(SetUserMsgReadStatusRequest) returns (SetUserMsgReadStatusResponse);
////获取私聊对话未读消息
//    rpc GetUnreadUserMsgs(GetUnreadUserMsgsRequest) returns (GetUnreadUserMsgsResponse);
////删除多条私聊消息
//    rpc DeleteUserMsgs(DeleteUserMsgsRequest) returns (DeleteUserMsgsResponse);
//
//
////批量设置群聊消息id为已读
//    rpc SetGroupMsgsReadStatus(SetGroupMsgReadStatusRequest) returns (SetGroupMsgReadStatusResponse);
////修改指定群聊消息的已读状态
//    rpc SetGroupMsgReadStatus(SetUserMsgReadStatusRequest) returns (SetUserMsgReadStatusResponse);
////获取群聊对话未读消息
//    rpc GetUnreadGroupMsgs(GetUnreadGroupMsgsRequest) returns (GetUnreadGroupMsgsResponse);
////删除多条群聊消息
//    rpc DeleteGroupMsgs(DeleteGroupMsgsRequest) returns (DeleteGroupMsgsResponse);
enum ReadType {
  NotRead = 0; //未读
  IsRead = 1; //已读
}

message SetUserMsgsReadStatusRequest {
  // @inject_tag: json:"msg_ids"
  repeated uint32 MsgIds = 1;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 2;
}
message SetUserMsgsReadStatusResponse {

}

message SetUserMsgReadStatusRequest {
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 1;
  // @inject_tag: json:"is_read"
  ReadType IsRead = 2;
}

message SetUserMsgReadStatusResponse {

}

//message SetGroupMsgReadStatusRequest {
//  // @inject_tag: json:"msg_ids"
//  repeated uint32 msgIds = 1;
//}
//
//message SetGroupMsgReadStatusResponse {
//
//}

message GetUnreadUserMsgsRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 2;
}

message GetUnreadUserMsgsResponse {
  // @inject_tag: json:"user_messages"
  repeated UserMessage UserMessages = 1;
}
//message GetUnreadGroupMsgsRequest {
//  // @inject_tag: json:"group_id"
//  uint32 DialogId = 1;
//  // @inject_tag: json:"user_id"
//  string UserId = 2;
//}
//message GetUnreadGroupMsgsResponse {
//  // @inject_tag: json:"group_messages"
//  repeated GroupMessage GroupMessages = 1;
//}
message GetUserMsgIdAfterMsgRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 2;
}

message GetUserMsgIdAfterMsgListRequest{
  // @inject_tag: json:"dialog_ids"
  repeated GetUserMsgIdAfterMsgRequest list = 1;
}

message GetUserMsgIdAfterMsgResponse{
  // @inject_tag: json:"user_messages"
  repeated UserMessage UserMessages = 1;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 2;
}

message GetUserMsgIdAfterMsgListResponse {
  // @inject_tag: json:"messages"
  repeated GetUserMsgIdAfterMsgResponse messages = 1;
}

message GetGroupMsgIdAfterMsgRequest {
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 1;
  // @inject_tag: json:"msg_id"
  uint32 MsgId = 2;
}

message GetGroupMsgIdAfterMsgListRequest{
  // @inject_tag: json:"dialog_ids"
  repeated GetGroupMsgIdAfterMsgRequest list = 1;
}

message GetGroupMsgIdAfterMsgResponse{
  // @inject_tag: json:"group_messages"
  repeated GroupMessage GroupMessages = 1;
  // @inject_tag: json:"dialog_id"
  uint32 DialogId = 2;
}

message GetGroupMsgIdAfterMsgListResponse {
  // @inject_tag: json:"messages"
  repeated GetGroupMsgIdAfterMsgResponse messages = 1;
}

message GetGroupMsgListRequest {
  // @inject_tag: json:"user_id" form:"user_id" uri:"user_id"
  string UserId=1;
  // @inject_tag: json:"type" form:"type" uri:"type"
  int32 Type = 2;
  // @inject_tag: json:"content" form:"content" uri:"content"
  string Content = 3;
  // @inject_tag: json:"page_size" form:"page_size" uri:"page_size"
  int32 PageSize = 4;
  // @inject_tag: json:"page_number" form:"page_number" uri:"page_number"
  int32 PageNum = 5;
  // @inject_tag: json:"group_id" form:"group_id" uri:"group_id"
  int32 GroupId = 6;
}

message GetGroupMsgListResponse {
  // @inject_tag: json:"group_messages"
  repeated GroupMessage GroupMessages = 1;
  // @inject_tag: json:"total"
  int32 Total = 2;
  // @inject_tag: json:"current_page"
  int32 CurrentPage = 3;
}
service MsgService{
  //发送私聊消息
  rpc SendUserMessage(SendUserMsgRequest) returns(SendUserMsgResponse);
  //发送群消息
  rpc SendGroupMessage(SendGroupMsgRequest) returns(SendGroupMsgResponse);
  //获取用户消息列表
  rpc GetUserMessageList(GetUserMsgListRequest) returns(GetUserMsgListResponse);
  //获取群消息列表
  rpc GetGroupMessageList(GetGroupMsgListRequest) returns(GetGroupMsgListResponse);
  //根据好友id获取最后一条消息
  rpc GetLastMsgsForUserWithFriends(UserMsgsRequest) returns (UserMessages);
  //根据群组id获取最后一条消息
  rpc GetLastMsgsForGroupsWithIDs(GroupMsgsRequest) returns (GroupMessages);
  //根据对话id获取最后一条消息
  rpc GetLastMsgsByDialogIds(GetLastMsgsByDialogIdsRequest) returns (GetLastMsgsResponse);
  //编辑私聊消息
  rpc EditUserMessage(EditUserMsgRequest) returns (UserMessage);
  //撤回私聊消息
  rpc DeleteUserMessage(DeleteUserMsgRequest) returns (UserMessage);
  //根据对话id与msgId查询msgId之后的私聊消息
  rpc GetUserMsgIdAfterMsgList(GetUserMsgIdAfterMsgListRequest) returns (GetUserMsgIdAfterMsgListResponse);


  //编辑群消息
  rpc EditGroupMessage(EditGroupMsgRequest) returns (GroupMessage);
  //撤回群消息
  rpc DeleteGroupMessage(DeleteGroupMsgRequest) returns (GroupMessage);
  //根据消息id获取私聊消息
  rpc GetUserMessageById(GetUserMsgByIDRequest) returns (UserMessage);
  //根据消息id获取群消息
  rpc GetGroupMessageById(GetGroupMsgByIDRequest) returns (GroupMessage);
  //设置私聊消息标注状态
  rpc SetUserMsgLabel(SetUserMsgLabelRequest) returns (SetUserMsgLabelResponse);
  // 设置群消息标注状态
  rpc SetGroupMsgLabel(SetGroupMsgLabelRequest) returns (SetGroupMsgLabelResponse);
  //根据对话id获取私聊标注信息
  rpc GetUserMsgLabelByDialogId(GetUserMsgLabelByDialogIdRequest) returns (GetUserMsgLabelByDialogIdResponse);
  //根据对话id获取群消息标注信息
  rpc GetGroupMsgLabelByDialogId(GetGroupMsgLabelByDialogIdRequest) returns (GetGroupMsgLabelByDialogIdResponse);
  //根据对话id与msgId查询msgId之后的群消息
  rpc GetGroupMsgIdAfterMsgList(GetGroupMsgIdAfterMsgListRequest) returns (GetGroupMsgIdAfterMsgListResponse);


  //批量设置私聊消息id为已读
  rpc SetUserMsgsReadStatus(SetUserMsgsReadStatusRequest) returns (SetUserMsgsReadStatusResponse);
  //修改指定私聊消息的已读状态
  rpc SetUserMsgReadStatus(SetUserMsgReadStatusRequest) returns (SetUserMsgReadStatusResponse);
  //获取私聊对话未读消息
  rpc GetUnreadUserMsgs(GetUnreadUserMsgsRequest) returns (GetUnreadUserMsgsResponse);
  //删除多条私聊消息
//  rpc DeleteUserMsgs(DeleteUserMsgsRequest) returns (DeleteUserMsgsResponse);


  //批量设置群聊消息id为已读
//  rpc SetGroupMsgsReadStatus(SetGroupMsgReadStatusRequest) returns (SetGroupMsgReadStatusResponse);
//  //修改指定群聊消息的已读状态
//  rpc SetGroupMsgReadStatus(SetUserMsgReadStatusRequest) returns (SetUserMsgReadStatusResponse);
//  //获取群聊对话未读消息
//  rpc GetUnreadGroupMsgs(GetUnreadGroupMsgsRequest) returns (GetUnreadGroupMsgsResponse);
//  //删除多条群聊消息
//  rpc DeleteGroupMsgs(DeleteGroupMsgsRequest) returns (DeleteGroupMsgsResponse);
}