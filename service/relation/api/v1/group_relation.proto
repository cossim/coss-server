syntax = "proto3";
package v1;
option go_package = "github.com/cossim/coss-server/service/relation/api/v1";
import "google/protobuf/empty.proto";

message UserGroupRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"group_id"
  uint32 GroupId = 2;
  // @inject_tag: json:"relation_status"
  uint32 RelationStatus = 4;
}

message UserGroupResponse {
}

message GroupIDRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;
}

message UserIdsResponse {
  // @inject_tag: json:"user_ids"
  repeated string UserIds = 1;
}


message JoinGroupRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1; // 群聊id
  // @inject_tag: json:"user_id"
  string UserId = 2;  // 用户id
  // @inject_tag: json:"msg"
  string Msg = 3; // 申请信息
  // @inject_tag: json:"identify"
  GroupIdentity Identify = 4;
}

message JoinGroupResponse {

}

message ManageJoinGroupRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;     // 群聊id
  // @inject_tag: json:"user_id"
  string UserId = 2;  // 用户id
  // @inject_tag: json:"status"
  GroupRelationStatus Status = 3;
}

message ManageJoinGroupResponse {
}


message RemoveFromGroupRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;     // 群聊id
  // @inject_tag: json:"user_id"
  string UserId = 2;     // 移除的用户id
}

message RemoveFromGroupResponse {
}

message LeaveGroupRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;   // 群聊id
  // @inject_tag: json:"user_id"
  string UserId = 2;    // 拒绝的用户id
}

message LeaveGroupResponse {
}

message GetGroupJoinRequestListRequest {
  repeated GroupIDRequest GroupIds = 1;
}

message GroupJoinRequestListResponse {
  repeated GroupJoinRequestList GroupJoinRequestList = 1;
}

message GroupJoinRequestList {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;   // 群聊id
  // @inject_tag: json:"user_id"
  string UserId = 2;    // 用户id
  // @inject_tag: json:"msg"
  string Msg = 3;       // 申请信息
  // @inject_tag: json:"status"
  GroupRelationStatus Status = 4;
  // @inject_tag: json:"created_at"
  int64 CreatedAt = 5;
}

message GetGroupRelationRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;     // 群聊id
  // @inject_tag: json:"user_id"
  string UserId = 2;     // 用户id
}

message GetGroupRelationResponse {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1; // 群聊ID
  // @inject_tag: json:"user_id"
  string UserId = 2;  // 用户ID
  // @inject_tag: json:"status"
  GroupRelationStatus Status = 3;
  // @inject_tag: json:"identity"
  GroupIdentity Identity = 4;  // 群聊身份
  // @inject_tag: json:"join_method"
  uint32 JoinMethod = 5;
  // @inject_tag: json:"join_time"
  int64 JoinTime = 6;
  int64 MuteEndTime = 7;
}

message Empty {
}


// 添加 GroupIdentity 枚举定义
enum GroupIdentity {
  IDENTITY_USER = 0;  // 普通用户
  IDENTITY_ADMIN = 1; // 管理员
  IDENTITY_OWNER = 2; // 群主
}

enum GroupRelationStatus {
    GroupStatusApplying  = 0; // 申请中
    GroupStatusJoined    = 1; // 已加入
    GroupStatusDeleted   = 2; // 已删除
    GroupStatusReject    = 3; // 被拒绝
    GroupStatusBlocked   = 4; // 被封禁
}

message GetUserManageGroupIDRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;
}

message GetUserManageGroupIDResponse {
  repeated GroupIDRequest GroupIDs = 1;
}

message GetUserGroupIDsRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;  // 用户ID
}

message GetUserGroupIDsResponse {
  // @inject_tag: json:"group_id"
  repeated  uint32 GroupId = 1; // 群聊ID
}

message GetUserGroupRequestListRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;
}

message GetUserGroupRequestListResponse {
  repeated GroupJoinRequestList GroupJoinRequestList = 1;
}

message DeleteGroupRelationByGroupIdAndUserIDRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupID = 1; // 群聊ID
  // @inject_tag: json:"user_id"
  string UserID = 2;  // 用户ID
  // @inject_tag: json:"status"
  GroupRelationStatus Status = 3;
}

message DeleteGroupRelationByGroupIdAndUserIDRevertRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupID = 1; // 群聊ID
  // @inject_tag: json:"user_id"
  string UserID = 2;  // 用户ID
  // @inject_tag: json:"status"
  GroupRelationStatus Status = 3;
}

message DeleteGroupRelationByGroupIdAndUserIDResponse {}

service GroupRelationService {
  // 加入群聊
  rpc JoinGroup (JoinGroupRequest) returns (JoinGroupResponse);

  // 加入群聊回滚操作
  rpc JoinGroupRevert(JoinGroupRequest) returns (JoinGroupResponse);

  // 获取群聊成员ID列表
  rpc GetGroupUserIDs(GroupIDRequest) returns (UserIdsResponse);

  // 获取用户的所有群聊ID列表
  rpc GetUserGroupIDs(GetUserGroupIDsRequest) returns (GetUserGroupIDsResponse);

  // 获取用户的所有群聊列表信息
  rpc GetUserGroupRequestList(GetUserGroupRequestListRequest) returns (GetUserGroupRequestListResponse);

  // 获取群聊管理员ID列表
  rpc GetGroupAdminIds(GroupIDRequest) returns (UserIdsResponse);

  // 获取用户管理的群聊ID列表
  rpc GetUserManageGroupID(GetUserManageGroupIDRequest) returns (GetUserManageGroupIDResponse);

  // ManageJoinGroup 管理群聊加入申请
  rpc ManageJoinGroup (ManageJoinGroupRequest) returns (ManageJoinGroupResponse);

  // 管理群聊加入申请回滚操作
  rpc ManageJoinGroupRevert(ManageJoinGroupRequest) returns (ManageJoinGroupResponse);

  // 从群聊中移除成员
  rpc RemoveFromGroup (RemoveFromGroupRequest) returns (RemoveFromGroupResponse);

  // 退出群聊
  rpc LeaveGroup (LeaveGroupRequest) returns (LeaveGroupResponse);

  // 退出群聊回滚操作
  rpc LeaveGroupRevert(LeaveGroupRequest) returns (LeaveGroupResponse);

  // 获取群聊加入申请列表
  rpc GetGroupJoinRequestList (GetGroupJoinRequestListRequest) returns (GroupJoinRequestListResponse);

  // 获取用户与群聊关系信息
  rpc GetGroupRelation (GetGroupRelationRequest) returns (GetGroupRelationResponse);

  // 根据群聊ID删除群聊的所有关系
  rpc DeleteGroupRelationByGroupId (GroupIDRequest) returns (Empty);

  // 根据群聊ID和用户ID删除用户的群聊关系
  rpc DeleteGroupRelationByGroupIdAndUserID(DeleteGroupRelationByGroupIdAndUserIDRequest) returns (google.protobuf.Empty);

  // DeleteGroupRelationByGroupIdAndUserID回滚操作
  rpc DeleteGroupRelationByGroupIdAndUserIDRevert(DeleteGroupRelationByGroupIdAndUserIDRequest) returns (google.protobuf.Empty);
}
