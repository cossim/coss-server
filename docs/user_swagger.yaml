definitions:
  model.LoginRequest:
    properties:
      driver_id:
        type: string
      driver_token:
        type: string
      email:
        type: string
      password:
        type: string
      platform:
        type: string
    required:
    - driver_id
    - driver_token
    - email
    - password
    - platform
    type: object
  model.LogoutRequest:
    properties:
      login_number:
        type: integer
    type: object
  model.ModifyUserSecretBundleRequest:
    properties:
      secret_bundle:
        type: string
    required:
    - secret_bundle
    type: object
  model.OpenBurnAfterReadingType:
    enum:
    - 0
    - 1
    type: integer
    x-enum-comments:
      CloseBurnAfterReading: 关闭阅后即焚
      OpenBurnAfterReading: 开启阅后即焚消息
    x-enum-varnames:
    - CloseBurnAfterReading
    - OpenBurnAfterReading
  model.PasswordRequest:
    properties:
      confirm_password:
        type: string
      old_password:
        type: string
      password:
        type: string
    required:
    - confirm_password
    - old_password
    - password
    type: object
  model.Preferences:
    properties:
      open_burn_after_reading:
        $ref: '#/definitions/model.OpenBurnAfterReadingType'
      open_burn_after_reading_time_out:
        type: integer
      remark:
        type: string
      silent_notification:
        $ref: '#/definitions/model.SilentNotification'
    type: object
  model.RegisterRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      nickname:
        type: string
      password:
        type: string
      public_key:
        type: string
    required:
    - confirm_password
    - email
    - password
    type: object
  model.ResetPublicKeyRequest:
    properties:
      code:
        type: string
      email:
        type: string
      public_key:
        type: string
    required:
    - code
    - email
    - public_key
    type: object
  model.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  model.SendEmailCodeRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  model.SetPublicKeyRequest:
    properties:
      public_key:
        type: string
    required:
    - public_key
    type: object
  model.SilentNotification:
    enum:
    - 0
    - 1
    type: integer
    x-enum-comments:
      IsSilentNotification: 开启静默通知
      NotSilentNotification: 不开启静默通知
    x-enum-varnames:
    - NotSilentNotification
    - IsSilentNotification
  model.UserInfoRequest:
    properties:
      avatar:
        type: string
      nickname:
        type: string
      signature:
        type: string
      tel:
        type: string
    type: object
  model.UserInfoResponse:
    properties:
      avatar:
        type: string
      email:
        type: string
      login_number:
        type: integer
      nickname:
        type: string
      preferences:
        $ref: '#/definitions/model.Preferences'
      relation_status:
        $ref: '#/definitions/model.UserRelationStatus'
      signature:
        type: string
      status:
        $ref: '#/definitions/model.UserStatus'
      tel:
        type: string
      user_id:
        type: string
    type: object
  model.UserRelationStatus:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-comments:
      UserRelationStatusBlacked: 删除
      UserRelationStatusFriend: 正常
      UserRelationStatusUnknown: 拉黑
    x-enum-varnames:
    - UserRelationStatusUnknown
    - UserRelationStatusFriend
    - UserRelationStatusBlacked
  model.UserStatus:
    enum:
    - 0
    type: integer
    x-enum-comments:
      UserStatusUnknown: 未知状态
    x-enum-varnames:
    - UserStatusUnknown
info:
  contact: {}
  title: user服务
paths:
  /user/activate:
    get:
      consumes:
      - application/json
      description: 激活账号
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: 激活账号
  /user/avatar/modify:
    post:
      consumes:
      - application/json
      description: 修改用户头像
      parameters:
      - description: 头像文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: 修改用户头像
  /user/bundle/get:
    get:
      consumes:
      - application/json
      description: 获取用户密钥包
      parameters:
      - description: 用户id
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: 获取用户密钥包
  /user/bundle/modify:
    post:
      consumes:
      - application/json
      description: 修改用户密码
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ModifyUserSecretBundleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerToken: []
      summary: 修改用户密钥包
  /user/clients/get:
    get:
      consumes:
      - application/json
      description: 获取该用户当前登录的所有客户端
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: 获取该用户当前登录的所有客户端
  /user/email/code/send:
    post:
      consumes:
      - application/json
      description: 发送重置验证码(邮箱)
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SendEmailCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: 发送重置验证码(邮箱)
  /user/info:
    get:
      description: 查询用户信息
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户id
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Status 用户状态 (0=未知状态, 1=正常状态, 2=被禁用, 3=已删除, 4=锁定状态) RelationStatus
            用户关系状态 (0=不是好友, 1=是好友, 2=黑名单)
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.UserInfoResponse'
              type: object
      security:
      - Bearer: []
      summary: 查询用户信息
  /user/info/modify:
    post:
      consumes:
      - application/json
      description: 修改用户信息
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerToken: []
      summary: 修改用户信息
  /user/key/set:
    post:
      consumes:
      - application/json
      description: 设置用户公钥
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SetPublicKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerToken: []
      summary: 设置用户公钥
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: 用户登录
  /user/logout:
    post:
      consumes:
      - application/json
      description: 退出登录
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: 退出登录
  /user/password/modify:
    post:
      consumes:
      - application/json
      description: 修改用户密码
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerToken: []
      summary: 修改用户密码
  /user/public_key/reset:
    post:
      consumes:
      - application/json
      description: 重置用户pgp公钥
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ResetPublicKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: 重置用户pgp公钥
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: 用户注册
  /user/search:
    get:
      description: 搜索用户
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户邮箱
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Status 用户状态 (0=未知状态, 1=正常状态, 2=被禁用, 3=已删除, 4=锁定状态) RelationStatus
            用户关系状态 (0=不是好友, 1=是好友, 2=黑名单)
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.UserInfoResponse'
              type: object
      security:
      - Bearer: []
      summary: 搜索用户
  /user/system/key/get:
    get:
      consumes:
      - application/json
      description: 获取系统pgp公钥
      parameters:
      - description: 指定根据id还是邮箱类型查找
        enum:
        - 0
        - 1
        in: query
        name: type
        required: true
        type: integer
      - description: 邮箱
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: 获取系统pgp公钥
swagger: "2.0"
